<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.bpm.core.entity.BpmRuPath">
	<resultMap id="BpmRuPath" type="com.redxun.bpm.core.entity.BpmRuPath">
		<id property="pathId" column="PATH_ID_" jdbcType="VARCHAR"/>
		<result property="instId" column="INST_ID_" jdbcType="VARCHAR"/>
		<result property="actDefId" column="ACT_DEF_ID_" jdbcType="VARCHAR"/>
		<result property="actInstId" column="ACT_INST_ID_" jdbcType="VARCHAR"/>
		<result property="solId" column="SOL_ID_" jdbcType="VARCHAR"/>
		<result property="nodeId" column="NODE_ID_" jdbcType="VARCHAR"/>
		<result property="nodeName" column="NODE_NAME_" jdbcType="VARCHAR"/>
		<result property="nodeType" column="NODE_TYPE_" jdbcType="VARCHAR"/>
		<result property="startTime" column="START_TIME_" jdbcType="TIMESTAMP"/>
		<result property="endTime" column="END_TIME_" jdbcType="TIMESTAMP"/>
		<result property="duration" column="DURATION_" jdbcType="NUMERIC"/>
		<result property="durationVal" column="DURATION_VAL_" jdbcType="NUMERIC"/>
		<result property="assignee" column="ASSIGNEE_" jdbcType="VARCHAR"/>
		<result property="toUserId" column="TO_USER_ID_" jdbcType="VARCHAR"/>
		<result property="isMultiple" column="IS_MULTIPLE_" jdbcType="VARCHAR"/>
		<result property="executionId" column="EXECUTEION_ID_" jdbcType="VARCHAR"/>
		<result property="userIds" column="USER_IDS" jdbcType="VARCHAR"/>
		<result property="level" column="LEVEL_" jdbcType="NUMERIC"/>
		<result property="token" column="TOKEN_" jdbcType="VARCHAR"/>
		<result property="jumpType" column="JUMP_TYPE_" jdbcType="VARCHAR"/>
		<result property="nextJumpType" column="NEXT_JUMP_TYPE_" jdbcType="VARCHAR"/>
		<result property="opinion" column="OPINION_" jdbcType="VARCHAR"/>
		<result property="refPathId" column="REF_PATH_ID_" jdbcType="VARCHAR"/>
		<result property="timeoutStatus" column="TIMEOUT_STATUS_" jdbcType="VARCHAR"/>
		<result property="parentId" column="PARENT_ID_" jdbcType="VARCHAR"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="outTranId" column="OUT_TRAN_ID_" jdbcType="VARCHAR"/>
	</resultMap>


	<insert id="create" parameterType="com.redxun.bpm.core.entity.BpmRuPath">
		INSERT INTO BPM_RU_PATH
		(PATH_ID_,INST_ID_,ACT_DEF_ID_,ACT_INST_ID_,SOL_ID_,NODE_ID_,NODE_NAME_,NODE_TYPE_,START_TIME_,END_TIME_,DURATION_,DURATION_VAL_,ASSIGNEE_,TO_USER_ID_,IS_MULTIPLE_,EXECUTION_ID_,USER_IDS_,PARENT_ID_,LEVEL_,OUT_TRAN_ID_,TOKEN_,JUMP_TYPE_,NEXT_JUMP_TYPE_,OPINION_,REF_PATH_ID_,TENANT_ID_,CREATE_BY_,CREATE_TIME_,UPDATE_BY_,UPDATE_TIME_,TIMEOUT_STATUS_)
		VALUES
		(#{pathId,jdbcType=VARCHAR}, #{instId,jdbcType=VARCHAR}, #{actDefId,jdbcType=VARCHAR}, #{actInstId,jdbcType=VARCHAR}, #{solId,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, #{nodeType,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{duration,jdbcType=NUMERIC}, #{durationVal,jdbcType=NUMERIC}, #{assignee,jdbcType=VARCHAR}, #{toUserId,jdbcType=VARCHAR}, #{isMultiple,jdbcType=VARCHAR}, #{executionId,jdbcType=VARCHAR}, #{userIds,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{level,jdbcType=NUMERIC}, #{outTranId,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{jumpType,jdbcType=VARCHAR}, #{nextJumpType,jdbcType=VARCHAR}, #{opinion,jdbcType=VARCHAR}, #{refPathId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{timeoutStatus,jdbcType=VARCHAR})
	</insert>

	<select id="get"   parameterType="java.lang.String" resultMap="BpmRuPath">
		SELECT * FROM BPM_RU_PATH
		WHERE
		PATH_ID_=#{pathId}
	</select>

	<select id="query" parameterType="java.util.Map" resultMap="BpmRuPath">
		SELECT * FROM BPM_RU_PATH
		<where>
			<if test="@Ognl@isNotEmpty(whereSql)">
				${whereSql}
			</if>
		</where>
		<if test="@Ognl@isNotEmpty(orderBySql)">
			ORDER BY ${orderBySql}
		</if>
		<if test="@Ognl@isEmpty(orderBySql)">
			ORDER BY PATH_ID_ DESC
		</if>
	</select>
	
	<select id="getByActInstIdNodeIdLevel"   parameterType="java.lang.String" resultMap="BpmRuPath">
		SELECT * FROM BPM_RU_PATH
		WHERE ACT_INST_ID_=#{ACT_INST_ID_}
		and NODE_ID_=#{NODE_ID_}
		and LEVEL_=#{LEVEL_}
		<if test="@Ognl@isNotEmpty(TOKEN_)">
			and TOKEN_=#{TOKEN_}
		</if>
	</select>
	
	

	<update id="update" parameterType="com.redxun.bpm.core.entity.BpmRuPath">
		UPDATE BPM_RU_PATH SET
		INST_ID_=#{instId,jdbcType=VARCHAR},
		ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR},
		ACT_INST_ID_=#{actInstId,jdbcType=VARCHAR},
		SOL_ID_=#{solId,jdbcType=VARCHAR},
		NODE_ID_=#{nodeId,jdbcType=VARCHAR},
		NODE_NAME_=#{nodeName,jdbcType=VARCHAR},
		NODE_TYPE_=#{nodeType,jdbcType=VARCHAR},
		START_TIME_=#{startTime,jdbcType=TIMESTAMP},
		END_TIME_=#{endTime,jdbcType=TIMESTAMP},
		DURATION_=#{duration,jdbcType=NUMERIC},
		DURATION_VAL_=#{durationVal,jdbcType=NUMERIC},
		ASSIGNEE_=#{assignee,jdbcType=VARCHAR},
		TO_USER_ID_=#{toUserId,jdbcType=VARCHAR},
		IS_MULTIPLE_=#{isMultiple,jdbcType=VARCHAR},
		EXECUTION_ID_=#{executionId,jdbcType=VARCHAR},
		USER_IDS_=#{userIds,jdbcType=VARCHAR},
		PARENT_ID_=#{parentId,jdbcType=VARCHAR},
		LEVEL_=#{level,jdbcType=NUMERIC},
		OUT_TRAN_ID_=#{outTranId,jdbcType=VARCHAR},
		TOKEN_=#{token,jdbcType=VARCHAR},
		JUMP_TYPE_=#{jumpType,jdbcType=VARCHAR},
		NEXT_JUMP_TYPE_=#{nextJumpType,jdbcType=VARCHAR},
		OPINION_=#{opinion,jdbcType=VARCHAR},
		REF_PATH_ID_=#{refPathId,jdbcType=VARCHAR},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		UPDATE_TIME_=#{updateTime,jdbcType=TIMESTAMP},
		TIMEOUT_STATUS_=#{timeoutStatus,jdbcType=VARCHAR}
		WHERE
		PATH_ID_=#{pathId}
	</update>

	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM BPM_RU_PATH
		WHERE
		PATH_ID_=#{pathId}
	</delete>


	<!-- 按最新的实例ID获得审批节点及及状态 -->
	<select id="getLatestByActInstId" parameterType="java.util.Map" resultMap="BpmRuPath">
		select * from bpm_ru_path a where a.act_inst_id_=#{actInstId} and exists(
		select 1 from (select act_inst_id_, NODE_ID_,max(CREATE_TIME_) as CREATE_TIME_ FROM BPM_RU_PATH where act_inst_id_=#{actInstId}  group by act_inst_id_, node_id_) x
		where a.act_inst_id_=x.act_inst_id_ and x.node_id_=a.node_id_ and a.create_time_=x.create_time_) 
	</select>

	<select id="getLastPathByNode" resultMap="BpmRuPath">
		select * from bpm_ru_path a where a.act_inst_id_=#{actInstId}
		and NODE_ID_=#{nodeId} and JUMP_TYPE_='AGREE'
		<if test="@Ognl@isNotEmpty(createTime)">
			and CREATE_TIME_ &lt; #{createTime}
		</if>
		 and LEVEL_=(select max(LEVEL_) from bpm_ru_path b where b.act_inst_id_=#{actInstId}
		and b.NODE_ID_=#{nodeId} and JUMP_TYPE_='AGREE'
			<if test="@Ognl@isNotEmpty(createTime)">
				and CREATE_TIME_ &lt; #{createTime}
			</if>
		)
	</select>

	<select id="getMinPathByNode" resultMap="BpmRuPath">
		select a.* from bpm_ru_path a where a.act_inst_id_=#{actInstId}
 		and LEVEL_=(select min(LEVEL_)-1 from bpm_ru_path b where b.act_inst_id_=#{actInstId}
		and b.NODE_ID_=#{nodeId} )
	</select>


	<delete id="removeByInst" >
		delete from bpm_ru_path where INST_ID_=#{instId}
	</delete>

	<select id="getByExecutionNode" parameterType="java.util.Map" resultMap="BpmRuPath" >
		SELECT * from bpm_ru_path  where EXECUTION_ID_=#{executionId} and NODE_ID_=#{nodeId} ORDER BY CREATE_TIME_ DESC
	</select>

	<select id="getByActInstId" parameterType="java.util.Map" resultMap="BpmRuPath">
		select * from bpm_ru_path a where a.act_inst_id_=#{actInstId}  
	</select>


	<select id="getEarliestByActInstId" resultMap="BpmRuPath">
		select * from bpm_ru_path a where a.act_inst_id_=#{actInstId}   and LEVEL_ &lt;= (select min(LEVEL_) FROM bpm_ru_path b where b.act_inst_id_=#{actInstId}
		and b.NODE_ID_=#{nodeId})
	</select>

	<select id="getLatestCheckStatus" parameterType="java.util.Map" resultType="java.util.HashMap">
		select vo.PATH_ID_ as pathId,vo.NODE_ID_ as nodeId , vo.JUMP_TYPE_ as jumpType,max(vo.CREATE_TIME_) as createTime from bpm_ru_path vo where vo.act_inst_id_= #{actInstId}  and vo.NODE_TYPE_  = #{nodeType} group by vo.NODE_ID_
	</select>

    <select id="getByParentIdNodeId" parameterType="java.util.Map" resultMap="BpmRuPath">
        select * from bpm_ru_path where PARENT_ID_=#{parentId} and NODE_ID_=#{nodeId}
	</select>

    <select id="getMaxLevel" parameterType="java.util.Map" resultType="java.lang.Integer">
        select max(LEVEL_) from bpm_ru_path where ACT_INST_ID_=#{actInstId} and NODE_ID_=#{nodeId}
	</select>

    <select id="getByActInstIdGtCreateTinme" parameterType="java.util.Map" resultMap="BpmRuPath">
        select * from bpm_ru_path where ACT_INST_ID_=#{actInstId} and CREATE_TIME_ > #{createTime}
	</select>


</mapper>