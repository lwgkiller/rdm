<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.bpm.core.entity.BpmInstCp">
	<resultMap id="BpmInstCp" type="com.redxun.bpm.core.entity.BpmInstCp">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="userId" column="USER_ID_" jdbcType="VARCHAR"/>
		<result property="groupId" column="GROUP_ID_" jdbcType="VARCHAR"/>
		<result property="ccId" column="CC_ID_" jdbcType="VARCHAR"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="isRead" column="IS_READ_" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="create" parameterType="com.redxun.bpm.core.entity.BpmInstCp">
		INSERT INTO bpm_inst_cp
		(ID_,USER_ID_,GROUP_ID_,CC_ID_,TENANT_ID_,CREATE_BY_,CREATE_TIME_,UPDATE_BY_,UPDATE_TIME_,IS_READ_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, #{ccId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{isRead,jdbcType=VARCHAR})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="BpmInstCp">
		SELECT * FROM bpm_inst_cp 
		WHERE 
		ID_=#{id}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="BpmInstCp">
		SELECT * FROM bpm_inst_cp
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>
		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.redxun.bpm.core.entity.BpmInstCp">
		UPDATE bpm_inst_cp SET
		USER_ID_=#{userId,jdbcType=VARCHAR},
		GROUP_ID_=#{groupId,jdbcType=VARCHAR},
		CC_ID_=#{ccId,jdbcType=VARCHAR},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		UPDATE_TIME_=#{updateTime,jdbcType=TIMESTAMP},
		IS_READ_=#{isRead,jdbcType=VARCHAR}
		WHERE
		ID_=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM bpm_inst_cp 
		WHERE
		ID_=#{id}
	</delete>

	<update id="updRead" parameterType="java.lang.String">
		UPDATE BPM_INST_CP SET
		IS_READ_= 'YES'
		WHERE
		ID_=#{id}
	</update>

	<select id="getCountsByInstIdUserId"   parameterType="java.lang.String" resultMap="BpmInstCp">
		SELECT * FROM BPM_INST_CP a left join a.bpmInstCc.bpmInst ab
		WHERE
		ID_=#{id}
	</select>

	<delete id="delByInst" parameterType="java.lang.String">
		delete from bpm_inst_cp  where CC_ID_ in (select CC_ID_ from bpm_inst_cc cc where   cc.INST_ID_=#{instId})
	</delete>

	<!--<update id="updRead" parameterType="com.redxun.bpm.core.entity.BpmInstCp">
		UPDATE bpm_inst_cp SET
		IS_READ_='YES'
		WHERE
		ID_=#{id}
	</update>-->


	
</mapper>