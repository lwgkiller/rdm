<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.serviceEngineering.core.dao.MaintenanceManualMctDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="startIndex != null and startIndex != '' ">
                limit ${startIndex}, ${pageSize}
            </if>
            <if test="startIndex == null or startIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>
    <sql id="query_where">
        os_rel_inst.REL_TYPE_KEY_ = 'GROUP-USER-BELONG'
        AND os_rel_inst.DIM1_ = '1'
        <if test="busunessNo !=null and busunessNo !=''">
            AND business.busunessNo like CONCAT('%',#{busunessNo},'%')
        </if>
        <if test="salesModel !=null and salesModel !=''">
            AND business.salesModel like CONCAT('%',#{salesModel},'%')
        </if>
        <if test="designModel !=null and designModel !=''">
            AND business.designModel like CONCAT('%',#{designModel},'%')
        </if>
        <if test="materialCode !=null and materialCode !=''">
            AND business.materialCode = #{materialCode}
        </if>
        <if test="salesArea !=null and salesArea !=''">
            AND business.salesArea like CONCAT('%',#{salesArea},'%')
        </if>
        <if test="manualLanguage !=null and manualLanguage !=''">
            AND business.manualLanguage like CONCAT('%',#{manualLanguage},'%')
        </if>
        <if test="applyUser !=null and applyUser !=''">
            AND business.applyUser like CONCAT('%',#{applyUser},'%')
        </if>
        <if test="applyDep !=null and applyDep !=''">
            AND business.applyDep like CONCAT('%',#{applyDep},'%')
        </if>
        <if test="businessStatus !=null and businessStatus !=''">
            AND business.businessStatus = #{businessStatus}
        </if>
        <if test="demandListNo !=null and demandListNo !=''">
            AND business.demandListNo like CONCAT('%',#{demandListNo},'%')
        </if>
        <if test="demandBusunessNo !=null and demandBusunessNo !=''">
            AND business.demandBusunessNo like CONCAT('%',#{demandBusunessNo},'%')
        </if>
        <if test="demandId !=null and demandId !=''">
            AND business.demandId = #{demandId}
        </if>
    </sql>
    <!--特别注意，由于以前没有在业务表双向绑定INST_ID_才需要联查bpm_inst.INST_ID_ AS instId。其实现在没必要了，可以用business.INST_ID_取代-->
    <select id="dataListQuery" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        business.*,
        manualdemand.demandListStatus,
        manualdemand.amHandle,
        act_ru_task.NAME_ AS currentProcessTask,
        act_ru_task.ID_ AS taskId,
        bpm_inst.STATUS_ AS status,
        bpm_inst.INST_ID_ AS instId
        FROM
        service_engineering_maintenance_manualmct AS business
        LEFT JOIN service_engineering_maintenance_manualdemand as manualdemand ON business.demandId = manualdemand.id
        LEFT JOIN os_rel_inst ON business.applyUserId = os_rel_inst.PARTY2_
        LEFT JOIN os_group ON os_rel_inst.PARTY1_ = os_group.GROUP_ID_
        LEFT JOIN os_user AS applyer ON applyer.USER_ID_ = business.applyUserId
        LEFT JOIN bpm_inst ON business.id = bpm_inst.BUS_KEY_
        LEFT JOIN act_ru_task ON bpm_inst.ACT_INST_ID_ = act_ru_task.PROC_INST_ID_
        <where>
            <include refid="query_where"/>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>
    <!---->
    <select id="countDataListQuery" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        service_engineering_maintenance_manualmct AS business
        LEFT JOIN os_rel_inst ON business.applyUserId = os_rel_inst.PARTY2_
        LEFT JOIN os_group ON os_rel_inst.PARTY1_ = os_group.GROUP_ID_
        LEFT JOIN os_user AS applyer ON applyer.USER_ID_ = business.applyUserId
        LEFT JOIN bpm_inst ON business.id = bpm_inst.BUS_KEY_
        LEFT JOIN act_ru_task ON bpm_inst.ACT_INST_ID_ = act_ru_task.PROC_INST_ID_
        <where>
            <include refid="query_where"/>
        </where>
    </select>
    <!---->
    <select id="queryFileList" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        select * from service_engineering_maintenance_manualmctfileinfo
        where mainId IN
        <foreach collection="businessIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!---->
    <delete id="deleteBusinessFile" parameterType="java.util.Map">
        delete from service_engineering_maintenance_manualmctfileinfo
        <where>
            <if test="id != null and id != ''">
                id=#{id}
            </if>
            <if test="businessIds != null and businessIds !=''">
                AND mainId IN
                <foreach collection="businessIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>
    <!---->
    <delete id="deleteBusiness" parameterType="java.util.Map">
        delete from service_engineering_maintenance_manualmct
        <where>
            <if test="businessIds != null and businessIds !=''">
                id IN
                <foreach collection="businessIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>
    <!--和组织，用户，bpm_inst的关联没啥用了。业务表冗余存储了，此处还保留，供以后其他的参考。特别注意，由于以前没有在业务表双向绑定INST_ID_才需要联查bpm_inst-->
    <select id="queryDetailById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT business.*
        FROM service_engineering_maintenance_manualmct AS business
            LEFT JOIN os_user ON business.applyUserId = os_user.USER_ID_
            LEFT JOIN os_rel_inst ON business.applyUserId = os_rel_inst.PARTY2_
            LEFT JOIN os_group ON os_rel_inst.PARTY1_ = os_group.GROUP_ID_
            LEFT JOIN bpm_inst ON business.id = bpm_inst.BUS_KEY_
        WHERE business.id = #{businessId}
              AND os_rel_inst.REL_TYPE_KEY_ = 'GROUP-USER-BELONG'
              AND os_rel_inst.DIM1_ = '1'
    </select>
    <!---->
    <insert id="insertBusiness" parameterType="com.alibaba.fastjson.JSONObject">
        insert into service_engineering_maintenance_manualmct(
            id,
            busunessNo,
            instructions,
            salesModel,
            designModel,
            materialCode,
            salesArea,
            manualLanguage,
            isCE,
            isSelfDeclaration,
            CEOnlyNum,
            applyTime,
            publishTime,
            estimateTime,
            emissionStandard,
            isPIOEPDocArchived,
            isCertifiReptArchived,
            applyUserId,
            applyUser,
            applyDepId,
            applyDep,
            businessStatus,
            remark,
            BconfirmingId,
            Bconfirming,
            demandId,
            demandInstid,
            demandBusunessNo,
            demandListNo,
            CREATE_BY_,
            CREATE_TIME_
        )
        values(
            #{id,jdbcType=VARCHAR},
            #{busunessNo,jdbcType=VARCHAR},
            #{instructions,jdbcType=VARCHAR},
            #{salesModel,jdbcType=VARCHAR},
            #{designModel,jdbcType=VARCHAR},
            #{materialCode,jdbcType=VARCHAR},
            #{salesArea,jdbcType=VARCHAR},
            #{manualLanguage,jdbcType=VARCHAR},
            #{isCE,jdbcType=VARCHAR},
            #{isSelfDeclaration,jdbcType=VARCHAR},
            #{CEOnlyNum,jdbcType=VARCHAR},
            #{applyTime,jdbcType=VARCHAR},
            #{publishTime,jdbcType=VARCHAR},
            #{estimateTime,jdbcType=VARCHAR},
            #{emissionStandard,jdbcType=VARCHAR},
            #{isPIOEPDocArchived,jdbcType=VARCHAR},
            #{isCertifiReptArchived,jdbcType=VARCHAR},
            #{applyUserId,jdbcType=VARCHAR},
            #{applyUser,jdbcType=VARCHAR},
            #{applyDepId,jdbcType=VARCHAR},
            #{applyDep,jdbcType=VARCHAR},
            #{businessStatus,jdbcType=VARCHAR},
            #{remark,jdbcType=VARCHAR},
            #{BconfirmingId,jdbcType=VARCHAR},
            #{Bconfirming,jdbcType=VARCHAR},
            #{demandId,jdbcType=VARCHAR},
            #{demandInstid,jdbcType=VARCHAR},
            #{demandBusunessNo,jdbcType=VARCHAR},
            #{demandListNo,jdbcType=VARCHAR},
            #{CREATE_BY_,jdbcType=VARCHAR},
            #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <update id="updateBusiness" parameterType="com.alibaba.fastjson.JSONObject">
        update service_engineering_maintenance_manualmct
        set
            busunessNo=#{busunessNo,jdbcType=VARCHAR},
            instructions=#{instructions,jdbcType=VARCHAR},
            salesModel=#{salesModel,jdbcType=VARCHAR},
            designModel=#{designModel,jdbcType=VARCHAR},
            materialCode=#{materialCode,jdbcType=VARCHAR},
            salesArea=#{salesArea,jdbcType=VARCHAR},
            manualLanguage=#{manualLanguage,jdbcType=VARCHAR},
            isCE=#{isCE,jdbcType=VARCHAR},
            isSelfDeclaration=#{isSelfDeclaration,jdbcType=VARCHAR},
            CEOnlyNum=#{CEOnlyNum,jdbcType=VARCHAR},
            applyTime=#{applyTime,jdbcType=VARCHAR},
            publishTime=#{publishTime,jdbcType=VARCHAR},
            estimateTime=#{estimateTime,jdbcType=VARCHAR},
            emissionStandard=#{emissionStandard,jdbcType=VARCHAR},
            isPIOEPDocArchived=#{isPIOEPDocArchived,jdbcType=VARCHAR},
            isCertifiReptArchived=#{isCertifiReptArchived,jdbcType=VARCHAR},
            applyUserId=#{applyUserId,jdbcType=VARCHAR},
            applyUser=#{applyUser,jdbcType=VARCHAR},
            applyDepId=#{applyDepId,jdbcType=VARCHAR},
            applyDep=#{applyDep,jdbcType=VARCHAR},
            businessStatus=#{businessStatus,jdbcType=VARCHAR},
            remark=#{remark,jdbcType=VARCHAR},
            BconfirmingId=#{BconfirmingId,jdbcType=VARCHAR},
            Bconfirming=#{Bconfirming,jdbcType=VARCHAR},
            demandId=#{demandId,jdbcType=VARCHAR},
            demandInstid=#{demandInstid,jdbcType=VARCHAR},
            demandBusunessNo=#{demandBusunessNo,jdbcType=VARCHAR},
            demandListNo=#{demandListNo,jdbcType=VARCHAR},
            UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
            UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=VARCHAR},
            INST_ID_=#{INST_ID_,jdbcType=VARCHAR}
        where
            id=#{id}
    </update>
    <!---->
    <insert id="addFileInfos" parameterType="com.alibaba.fastjson.JSONObject">
        insert into service_engineering_maintenance_manualmctfileinfo(
        id,
        fileName,
        fileSize,
        fileDesc,
        mainId,
        CREATE_BY_,
        CREATE_TIME_
        ) values(
        #{id,jdbcType=VARCHAR},
        #{fileName,jdbcType=VARCHAR},
        #{fileSize,jdbcType=VARCHAR},
        #{fileDesc,jdbcType=VARCHAR},
        #{mainId,jdbcType=VARCHAR},
        #{CREATE_BY_,jdbcType=VARCHAR},
        #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <select id="getDeptRespByGroupId" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        os_rel_inst.*,
        os_user.USER_ID_,
        os_user.FULLNAME_,
        os_group.NAME_ as groupName
        FROM
        os_rel_inst
        LEFT JOIN os_user ON os_rel_inst.PARTY2_ = os_user.USER_ID_
        left join os_group on os_rel_inst.PARTY1_=os_group.GROUP_ID_
        where REL_TYPE_KEY_='GROUP-USER-LEADER'
        AND os_group.PARENT_ID_ = '87212403321741318'
        <if test="TENANT_ID_ != null and TENANT_ID_ != ''">
            and os_rel_inst.TENANT_ID_=#{TENANT_ID_}
        </if>
        <if test="GROUP_ID_ != null and GROUP_ID_ != ''">
            and os_group.GROUP_ID_=#{GROUP_ID_}
        </if>
    </select>
    <!---->
    <select id="getDeptRespByUserId" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            os_user.USER_ID_,
            os_user.FULLNAME_
        FROM
            os_user
        WHERE
            os_user.STATUS_ = 'IN_JOB'
            AND os_user.USER_ID_ IN (
                SELECT PARTY2_
                FROM
                    os_rel_inst
                WHERE
                    os_rel_inst.REL_TYPE_KEY_ = 'GROUP-USER-LEADER'
                    AND DIM1_ = '1'
                    AND os_rel_inst.PARTY1_ IN (
                        SELECT PARTY1_
                        FROM os_rel_inst
                        WHERE os_rel_inst.REL_TYPE_KEY_ = 'GROUP-USER-BELONG' AND DIM1_ = '1'
                              AND os_rel_inst.PARTY2_ = #{userId})
            )
    </select>
</mapper>