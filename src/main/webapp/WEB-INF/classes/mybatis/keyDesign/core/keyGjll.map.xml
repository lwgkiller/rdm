<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.keyDesign.core.dao.KeyGjllDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="startIndex != null and startIndex != '' ">
                limit ${startIndex}, ${pageSize}
            </if>
            <if test="startIndex == null or startIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>

    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>
    <insert id="createGjll" parameterType="com.alibaba.fastjson.JSONObject">
        insert into keydesign_gjll(
        gjId
        ,model
        ,codeName
        ,belongbj
        ,supplier
        ,problem
        ,reason
        ,solve
        ,changeFile
        ,changeTime
        ,situation
        ,noticeId
        ,noticeName
        ,CREATE_BY_
        ,CREATE_TIME_
        )
        values(
        #{gjId,jdbcType=VARCHAR},
        #{model,jdbcType=VARCHAR},
        #{codeName,jdbcType=VARCHAR},
        #{belongbj,jdbcType=VARCHAR},
        #{supplier,jdbcType=VARCHAR},
        #{problem,jdbcType=VARCHAR},
        #{reason,jdbcType=VARCHAR},
        #{solve,jdbcType=VARCHAR},
        #{changeFile,jdbcType=VARCHAR},
        #{changeTime,jdbcType=TIMESTAMP},
        #{situation,jdbcType=VARCHAR},
        #{noticeId,jdbcType=VARCHAR},
        #{noticeName,jdbcType=VARCHAR},
        #{CREATE_BY_,jdbcType=VARCHAR},
        #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <update id="updateGjll" parameterType="com.alibaba.fastjson.JSONObject">
        update keydesign_gjll
        <set>
            model=#{model,jdbcType=VARCHAR},
            codeName=#{codeName,jdbcType=VARCHAR},
            supplier=#{supplier,jdbcType=VARCHAR},
            problem=#{problem,jdbcType=VARCHAR},
            reason=#{reason,jdbcType=VARCHAR},
            solve=#{solve,jdbcType=VARCHAR},
            changeFile=#{changeFile,jdbcType=VARCHAR},
            changeTime=#{changeTime,jdbcType=TIMESTAMP},
            situation=#{situation,jdbcType=VARCHAR},
            noticeId=#{noticeId,jdbcType=VARCHAR},
            noticeName =#{noticeName,jdbcType=VARCHAR},
            UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
            UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        </set>
        where
        gjId=#{gjId}
    </update>
    <select id="queryGjllById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        select keydesign_gjll.*,
        keydesign_tree.codeName
        from keydesign_gjll
        left join keydesign_tree on keydesign_tree.id = keydesign_gjll.belongbj
        where
        keydesign_gjll.gjId=#{gjId}
    </select>
    <select id="queryGjllFileList" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        fileId,
        fileName,
        belongId as gjId,
        fileSize,
        fileType
        FROM
        keydesign_gjllfile
        WHERE
        <if test="gjIds != null and gjIds !=''">
            belongId IN
            <foreach collection="gjIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

    </select>
    <select id="queryGjll" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        keydesign_gjll.*,
        os_user.FULLNAME_ AS userName
        from
        keydesign_gjll
        LEFT JOIN os_user ON os_user.USER_ID_ = keydesign_gjll.CREATE_BY_
        <where>
            belongbj=#{belongbj}
            <if test="model != null and model != ''">
                and model like CONCAT('%',#{model},'%')
            </if>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>
    <select id="countGjllList" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
        count( * )
        FROM
        keydesign_gjll
        <where>
            belongbj=#{belongbj}
            <if test="model != null and model != ''">
                and model like CONCAT('%',#{model},'%')
            </if>
        </where>
    </select>
    <delete id="deleteGjllFile" parameterType="java.util.Map">
        delete from keydesign_gjllfile
        <where>
            <if test="fileId != null and fileId != ''">
                fileId=#{fileId}
            </if>
            <if test="gjIds != null and gjIds !=''">
                belongId IN
                <foreach collection="gjIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>
    <delete id="deleteGjll" parameterType="java.util.Map">
        delete from keydesign_gjll
        <where>
            <if test="gjIds != null and gjIds !=''">
                AND gjId IN
                <foreach collection="gjIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>


    <insert id="createFile" parameterType="com.alibaba.fastjson.JSONObject">
        insert into keydesign_gjllfile(
            fileId
            ,fileName
            ,belongId
            ,fileSize
            ,fileType
            ,CREATE_BY_
            ,CREATE_TIME_
        )
        values(
            #{fileId,jdbcType=VARCHAR},
            #{fileName,jdbcType=VARCHAR},
            #{belongId,jdbcType=VARCHAR},
            #{fileSize,jdbcType=VARCHAR},
            #{fileType,jdbcType=VARCHAR},
            #{CREATE_BY_,jdbcType=VARCHAR},
            #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <select id="queryBj" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        codeName
        FROM
        keydesign_tree
        <where>
            id=#{id}
        </where>
    </select>

    <select id="queryOldGjllFileList" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        *
        FROM
        zlgj_newgjllfile
        WHERE
        zlgj_newgjllfile.belongId= #{belongId}
    </select>
</mapper>
