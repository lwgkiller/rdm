<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.rdmZhgl.core.dao.ProductConfigDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="currentIndex != null and currentIndex != '' ">
                limit ${currentIndex}, ${pageSize}
            </if>
            <if test="currentIndex == null or currentIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>
    <select id="query" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            B.deptName,
            B.sort as mainSort,
            A.*
        FROM
            xpsz_dept_items A
            LEFT JOIN xpsz_dept B ON A.mainId = B.id
        <where>
            <if test="deptName != null and deptName != ''">
                and B.deptName=#{deptName}
            </if>
        </where>
            order by B.sort+'', A.sort
    </select>
    <select id="getItems"  resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        A.*
        FROM
        xpsz_dept_items A
        LEFT JOIN xpsz_dept B ON A.mainId = B.id
        <where>
            <if test="deptName != null and deptName != ''">
                and B.deptName=#{deptName}
            </if>
        </where>
        order by B.sort+'', A.sort
    </select>
    <select id="getObjectById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            A.*
        FROM
            xpsz_dept A
            where id=#{id}
    </select>
    <insert id="addObject" parameterType="java.util.Map">
         INSERT INTO xpsz_dept (
            id,
            CREATE_BY_,
            CREATE_TIME_,
            UPDATE_BY_,
            UPDATE_TIME_,
            deptName,
            sort
        )
        values(
            #{id,jdbcType=VARCHAR},
            #{CREATE_BY_,jdbcType=VARCHAR},
            #{CREATE_TIME_,jdbcType=TIMESTAMP},
            #{UPDATE_BY_,jdbcType=VARCHAR},
            #{UPDATE_TIME_,jdbcType=TIMESTAMP},
            #{deptName,jdbcType=VARCHAR},
            #{sort,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updateObject" parameterType="java.util.Map">
        update xpsz_dept
            <set>
                <if test="deptName != null and deptName != ''">
                    deptName=#{deptName,jdbcType=VARCHAR},
                </if>
                <if test="sort != null and sort != ''">
                    sort=#{sort,jdbcType=VARCHAR},
                </if>
                <if test="UPDATE_BY_ != null and UPDATE_BY_ != ''">
                    UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
                </if>
                <if test="UPDATE_TIME_ != null and UPDATE_TIME_ != ''">
                    UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP},
                </if>
            </set>
        WHERE
        id=#{id}
    </update>
    <insert id="addItem" parameterType="java.util.Map">
         INSERT INTO xpsz_dept_items (
            id,
            CREATE_BY_,
            CREATE_TIME_,
            UPDATE_BY_,
            UPDATE_TIME_,
            itemCode,
            itemName,
            sort,
            mainId,
            deliveryId,
            deliveryName,
            deptId,
            deptNames
        )
        values(
            #{id,jdbcType=VARCHAR},
            #{CREATE_BY_,jdbcType=VARCHAR},
            #{CREATE_TIME_,jdbcType=TIMESTAMP},
            #{UPDATE_BY_,jdbcType=VARCHAR},
            #{UPDATE_TIME_,jdbcType=TIMESTAMP},
            #{itemCode,jdbcType=VARCHAR},
            #{itemName,jdbcType=VARCHAR},
            #{sort,jdbcType=VARCHAR},
            #{mainId,jdbcType=VARCHAR},
            #{deliveryId,jdbcType=VARCHAR},
            #{deliveryName,jdbcType=VARCHAR},
             #{deptId,jdbcType=VARCHAR},
              #{deptNames,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updateItem" parameterType="java.util.Map">
        update xpsz_dept_items
        <set>
            <if test="itemCode != null and itemCode != ''">
                itemCode=#{itemCode,jdbcType=VARCHAR},
            </if>
            <if test="itemName != null and itemName != ''">
                itemName=#{itemName,jdbcType=VARCHAR},
            </if>
            <if test="sort != null and sort != ''">
                sort=#{sort,jdbcType=VARCHAR},
            </if>
            <if test="deliveryId != null and deliveryId != ''">
                deliveryId=#{deliveryId,jdbcType=VARCHAR},
            </if>
            <if test="deliveryName != null and deliveryName != ''">
                deliveryName=#{deliveryName,jdbcType=VARCHAR},
            </if>
            <if test="UPDATE_BY_ != null and UPDATE_BY_ != ''">
                UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
            </if>
            <if test="UPDATE_TIME_ != null and UPDATE_TIME_ != ''">
                UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP},
            </if>
            <if test="deptId != null and deptId != ''">
                deptId=#{deptId,jdbcType=VARCHAR},
            </if>
            <if test="deptNames != null and deptNames != ''">
                deptNames=#{deptNames,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE
        id=#{id}
    </update>
    <delete id="delItem" parameterType="java.lang.String">
        delete from xpsz_dept_items where id = #{id}
    </delete>
    <select id="getItemList" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            A.*
        FROM
        xpsz_dept_items A
        <where>
            <if test="mainId != null and mainId != ''">
                and A.mainId=#{mainId}
            </if>
            <if test="startSort != null and startSort != ''">
                and A.sort &gt;= #{startSort,jdbcType=INTEGER}
            </if>
            <if test="endSort != null and endSort != ''">
                and A.sort &lt;= #{endSort,jdbcType=INTEGER}
            </if>
        </where>
        ORDER BY A.sort +''
    </select>
    <delete id="batchDelete" parameterType="java.util.Map">
        delete from  xpsz_dept
        WHERE
        id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="batchDeleteItems" parameterType="java.util.Map">
        delete from  xpsz_dept_items
        WHERE
        mainId in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="getItemObjById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            A.*
        FROM
            xpsz_dept_items A
            where id=#{id}
    </select>
    <select id="getItemObjByCode" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            A.*
        FROM
            xpsz_dept_items A
            where itemCode=#{itemCode} limit 1
    </select>
    <select id="getDeliverList" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            A.*
        FROM
            project_stage_leveldelivery A
            LEFT JOIN project_stagedivide B ON A.stageId = B.stageId
        WHERE
            B.categoryId = #{categoryId}
            order by A.stageId,A.deliveryId
    </select>
    <select id="getStageList" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            A.*
        FROM
           xpsz_dept_items A
        WHERE
            A.deliveryId = #{deliveryId}
    </select>
</mapper>
