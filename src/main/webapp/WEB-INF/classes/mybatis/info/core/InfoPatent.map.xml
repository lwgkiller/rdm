<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.info.core.dao.InfoPatentDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="currentIndex != null and currentIndex != '' ">
                limit ${currentIndex}, ${pageSize}
            </if>
            <if test="currentIndex == null or currentIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>

    <select id="query" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        A.*,B.infoChildType
        FROM
        info_patent A
        left join info_urlconfig B on A.urlConfigId = B.id
        where 1=1
        <if test="type != null and type != ''">
            and (B.infoChildType  like CONCAT('%',#{type},'%') or A.patentType like CONCAT('%',#{type},'%'))
        </if>
        <if test="patentName != null and patentName != ''">
            and A.patentName like CONCAT('%',#{patentName},'%')
        </if>
        <if test="publishCode != null and publishCode != ''">
            and A.publishCode = #{publishCode}
        </if>
        <if test="typeCode != null and typeCode != ''">
            and A.typeCode = #{typeCode}
        </if>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>
    <insert id="batchInsertObject" parameterType="java.util.List">
        INSERT INTO info_patent (
        id,
        CREATE_BY_,
        CREATE_TIME_,
        UPDATE_BY_,
        UPDATE_TIME_,
        urlConfigId,
        patentName,
        publishCode,
        applyDate,
        publishDate,
        typeCode,
        content
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id,jdbcType=VARCHAR},
            #{item.CREATE_BY_,jdbcType=VARCHAR},
            #{item.CREATE_TIME_,jdbcType=TIMESTAMP},
            #{item.UPDATE_BY_,jdbcType=VARCHAR},
            #{item.UPDATE_TIME_,jdbcType=TIMESTAMP},
            #{item.urlConfigId,jdbcType=VARCHAR},
            #{item.patentName,jdbcType=VARCHAR},
            #{item.publishCode,jdbcType=VARCHAR},
            #{item.applyDate,jdbcType=VARCHAR},
            #{item.publishDate,jdbcType=VARCHAR},
            #{item.typeCode,jdbcType=VARCHAR},
            #{item.content,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <insert id="addObject" parameterType="java.util.Map">
         INSERT INTO info_patent (
            id,
            CREATE_BY_,
            CREATE_TIME_,
            UPDATE_BY_,
            UPDATE_TIME_,
            patentName,
            publishCode,
            applyPerson,
            applyDate,
            publishDate,
            typeCode,
            content,
            async,
            patentType
        )
        values(
            #{id,jdbcType=VARCHAR},
            #{CREATE_BY_,jdbcType=VARCHAR},
            #{CREATE_TIME_,jdbcType=TIMESTAMP},
            #{UPDATE_BY_,jdbcType=VARCHAR},
            #{UPDATE_TIME_,jdbcType=TIMESTAMP},
            #{patentName,jdbcType=VARCHAR},
            #{publishCode,jdbcType=VARCHAR},
            #{applyPerson,jdbcType=VARCHAR},
            #{applyDate,jdbcType=VARCHAR},
            #{publishDate,jdbcType=VARCHAR},
            #{typeCode,jdbcType=VARCHAR},
            #{content,jdbcType=VARCHAR},
            #{async,jdbcType=VARCHAR},
            #{patentType,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updatePatent" parameterType="java.util.Map">
        update info_patent
        <set>
            <if test="patentName != null and patentName != ''">
                patentName=#{patentName,jdbcType=VARCHAR},
            </if>
            <if test="patentType != null and patentType != ''">
                patentType=#{patentType,jdbcType=VARCHAR},
            </if>
            <if test="publishCode != null and publishCode != ''">
                publishCode=#{publishCode,jdbcType=VARCHAR},
            </if>
            <if test="applyPerson != null and applyPerson != ''">
                applyPerson=#{applyPerson,jdbcType=VARCHAR},
            </if>
            <if test="applyDate != null and applyDate != ''">
                applyDate=#{applyDate,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null and publishDate != ''">
                publishDate=#{publishDate,jdbcType=VARCHAR},
            </if>
            <if test="typeCode != null and typeCode != ''">
                typeCode=#{typeCode,jdbcType=VARCHAR},
            </if>
            <if test="content != null and content != ''">
                content=#{content,jdbcType=VARCHAR},
            </if>
            <if test="UPDATE_BY_ != null and UPDATE_BY_ != ''">
                UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
            </if>
            <if test="UPDATE_TIME_ != null and UPDATE_TIME_ != ''">
                UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP},
            </if>
        </set>
        WHERE
        id=#{id}
    </update>
    <select id="getObjectById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
       SELECT
        A.*
        FROM
        info_patent A
        where A.id = #{id}
    </select>
    <delete id="batchDelete" parameterType="java.util.Map">
        delete from  info_patent
        WHERE
        id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <update id="updateObject" parameterType="com.alibaba.fastjson.JSONObject">
        update info_reward
        set content = #{content,jdbcType=VARCHAR}
        where
        id=#{id}
    </update>
</mapper>
