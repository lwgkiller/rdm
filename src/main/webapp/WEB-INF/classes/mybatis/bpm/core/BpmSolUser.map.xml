<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.bpm.core.entity.BpmSolUser">
	<resultMap id="BpmSolUser" type="com.redxun.bpm.core.entity.BpmSolUser">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="solId" column="SOL_ID_" jdbcType="VARCHAR"/>
		<result property="actDefId" column="ACT_DEF_ID_" jdbcType="VARCHAR"/>
		<result property="nodeId" column="NODE_ID_" jdbcType="VARCHAR"/>
		<result property="nodeName" column="NODE_NAME_" jdbcType="VARCHAR"/>
		<result property="userType" column="USER_TYPE_" jdbcType="VARCHAR"/>
		<result property="userTypeName" column="USER_TYPE_NAME_" jdbcType="VARCHAR"/>
		<result property="configDescp" column="CONFIG_DESCP_" jdbcType="VARCHAR"/>
		<result property="config" column="CONFIG_" jdbcType="VARCHAR"/>
		<result property="isCal" column="IS_CAL_" jdbcType="VARCHAR"/>
		<result property="calLogic" column="CAL_LOGIC_" jdbcType="VARCHAR"/>
		<result property="sn" column="SN_" jdbcType="NUMERIC"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="category" column="CATEGORY_" jdbcType="VARCHAR"/>
		<result property="groupId" column="GROUP_ID_" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="create" parameterType="com.redxun.bpm.core.entity.BpmSolUser">
		INSERT INTO BPM_SOL_USER
		(ID_,SOL_ID_,ACT_DEF_ID_,NODE_ID_,NODE_NAME_,USER_TYPE_,USER_TYPE_NAME_,CONFIG_DESCP_,CONFIG_,IS_CAL_,CAL_LOGIC_,SN_,TENANT_ID_,UPDATE_BY_,CREATE_BY_,CREATE_TIME_,UPDATE_TIME_,CATEGORY_,GROUP_ID_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{solId,jdbcType=VARCHAR}, #{actDefId,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, #{userTypeName,jdbcType=VARCHAR}, #{configDescp,jdbcType=VARCHAR}, #{config,jdbcType=VARCHAR}, #{isCal,jdbcType=VARCHAR}, #{calLogic,jdbcType=VARCHAR}, #{sn,jdbcType=NUMERIC}, #{tenantId,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{category,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="BpmSolUser">
		SELECT * FROM BPM_SOL_USER 
		WHERE 
		ID_=#{id}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="BpmSolUser">
		SELECT * FROM BPM_SOL_USER
		<where>
			<if test="@Ognl@isNotEmpty(whereSql)">
				${whereSql}
			</if>
		</where>
		<if test="@Ognl@isNotEmpty(orderBySql)">
			ORDER BY ${orderBySql}
		</if>
		<if test="@Ognl@isEmpty(orderBySql)">
			ORDER BY ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.redxun.bpm.core.entity.BpmSolUser">
		UPDATE BPM_SOL_USER SET
		SOL_ID_=#{solId,jdbcType=VARCHAR},
		ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR},
		NODE_ID_=#{nodeId,jdbcType=VARCHAR},
		NODE_NAME_=#{nodeName,jdbcType=VARCHAR},
		USER_TYPE_=#{userType,jdbcType=VARCHAR},
		USER_TYPE_NAME_=#{userTypeName,jdbcType=VARCHAR},
		CONFIG_DESCP_=#{configDescp,jdbcType=VARCHAR},
		CONFIG_=#{config,jdbcType=VARCHAR},
		IS_CAL_=#{isCal,jdbcType=VARCHAR},
		CAL_LOGIC_=#{calLogic,jdbcType=VARCHAR},
		SN_=#{sn,jdbcType=NUMERIC},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		CATEGORY_=#{category,jdbcType=VARCHAR},
		GROUP_ID_=#{groupId,jdbcType=VARCHAR}
		WHERE
		ID_=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM BPM_SOL_USER 
		WHERE
		ID_=#{id}
	</delete>
	
	<delete id="delByGroupId" parameterType="java.lang.String">
		DELETE FROM BPM_SOL_USER 
		WHERE
		GROUP_ID_=#{groupId}
	</delete>
	
	
	<select id="isExistConfig"  resultType="java.lang.Long">
		select count(*) from BPM_SOL_USER bsu where bsu.SOL_ID_=#{solId,jdbcType=VARCHAR} and bsu.ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR}
	</select>
	
	<select id="getBySolId" resultMap="BpmSolUser">
		select * from BPM_SOL_USER bsu where bsu.SOL_ID_=#{solId,jdbcType=VARCHAR}
	</select>
	
	<select id="getByActDefId" resultMap="BpmSolUser">
		select * from BPM_SOL_USER bsu where bsu.ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR}
	</select>
	
	<select id="getBySolIActDefIdNodeIdCategory" resultMap="BpmSolUser">
		select * from BPM_SOL_USER bsu where bsu.SOL_ID_=#{solId,jdbcType=VARCHAR} and bsu.ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR} and bsu.NODE_ID_=#{nodeId,jdbcType=VARCHAR} 
		and bsu.CATEGORY_=#{category,jdbcType=VARCHAR} order by bsu.SN_ asc
	</select>
	
	<select id="getBySolIdActDefId" resultMap="BpmSolUser">
		select * from BPM_SOL_USER bsu where bsu.SOL_ID_=#{solId,jdbcType=VARCHAR} and bsu.ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR} order by bsu.SN_ asc
	</select>
	
	<select id="getBySolIdActDefIdCategory" resultMap="BpmSolUser">
		select * from BPM_SOL_USER bsu where bsu.SOL_ID_=#{solId,jdbcType=VARCHAR} and bsu.ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR}
		and bsu.CATEGORY_=#{category,jdbcType=VARCHAR} order by bsu.SN_ asc
	</select>
	
	<select id="getByActDefIdNodeIdCategory" resultMap="BpmSolUser">
		select * from BPM_SOL_USER bsu where bsu.ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR} and bsu.NODE_ID_=#{nodeId,jdbcType=VARCHAR} 
		and bsu.CATEGORY_=#{category,jdbcType=VARCHAR} order by bsu.SN_ asc
	</select>
	
	<delete id="delBySolIdActDefIdNodeIdCategory" parameterType="java.lang.String">
		delete from BPM_SOL_USER  where SOL_ID_=#{solId} and ACT_DEF_ID_=#{actDefId} and NODE_ID_=#{nodeId} and CATEGORY_=#{category}
	</delete>
	
	<select id="getByGroupId" resultMap="BpmSolUser">
		select * from BPM_SOL_USER bsu where bsu.GROUP_ID_=#{groupId}  order by bsu.SN_ asc
	</select>
	
	<delete id="delBySolId" parameterType="java.lang.String">
		delete from BPM_SOL_USER where SOL_ID_=#{solId}
	</delete>
	
	<delete id="delSolNodeIdCategory" parameterType="java.lang.String">
		delete from BPM_SOL_USER  where SOL_ID_=#{solId} and NODE_ID_=#{nodeId} and CATEGORY_=#{category}
	</delete>
	
	<delete id="delBySolIdActDefId" parameterType="java.lang.String">
		delete from BPM_SOL_USER where SOL_ID_=#{solId} and ACT_DEF_ID_=#{actDefId}
	</delete>
	
	<select id="getEmptyGroup"   parameterType="java.lang.String" resultMap="BpmSolUser">
		SELECT * FROM BPM_SOL_USER 
		WHERE 
		GROUP_ID_ is null
	</select>
	
	
	
</mapper>