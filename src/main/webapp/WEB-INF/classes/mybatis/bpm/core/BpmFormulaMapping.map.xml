<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.bpm.core.entity.BpmFormulaMapping">
	<resultMap id="BpmFormulaMapping" type="com.redxun.bpm.core.entity.BpmFormulaMapping">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="solId" column="SOL_ID_" jdbcType="VARCHAR"/>
		<result property="actDefId" column="ACT_DEF_ID_" jdbcType="VARCHAR"/>
		<result property="nodeId" column="NODE_ID_" jdbcType="VARCHAR"/>
		<result property="formulaName" column="FORMULA_NAME" jdbcType="VARCHAR"/>
		<result property="formulaId" column="FORMULA_ID_" jdbcType="VARCHAR"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<insert id="create" parameterType="com.redxun.bpm.core.entity.BpmFormulaMapping">
		INSERT INTO BPM_FORMULA_MAPPING
		(ID_,SOL_ID_,ACT_DEF_ID_,NODE_ID_,FORMULA_NAME,FORMULA_ID_,TENANT_ID_,CREATE_BY_,CREATE_TIME_,UPDATE_BY_,UPDATE_TIME_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{solId,jdbcType=VARCHAR}, #{actDefId,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, #{formulaName,jdbcType=VARCHAR}, #{formulaId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="BpmFormulaMapping">
		SELECT * FROM BPM_FORMULA_MAPPING 
		WHERE 
		ID_=#{id}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="BpmFormulaMapping">
		SELECT * FROM BPM_FORMULA_MAPPING
		<where>
			<if test="@Ognl@isNotEmpty(whereSql)">
				${whereSql}
			</if>
		</where>
		<if test="@Ognl@isNotEmpty(orderBySql)">
			ORDER BY ${orderBySql}
		</if>
		<if test="@Ognl@isEmpty(orderBySql)">
			ORDER BY ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.redxun.bpm.core.entity.BpmFormulaMapping">
		UPDATE BPM_FORMULA_MAPPING SET
		SOL_ID_=#{solId,jdbcType=VARCHAR},
		ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR},
		NODE_ID_=#{nodeId,jdbcType=VARCHAR},
		FORMULA_NAME=#{formulaName,jdbcType=VARCHAR},
		FORMULA_ID_=#{formulaId,jdbcType=VARCHAR},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		UPDATE_TIME_=#{updateTime,jdbcType=TIMESTAMP}
		WHERE
		ID_=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM BPM_FORMULA_MAPPING 
		WHERE
		ID_=#{id}
	</delete>
	
	<delete id="removeByFormulaId" parameterType="java.lang.String">
		DELETE FROM BPM_FORMULA_MAPPING 
		WHERE
		FORMULA_ID_=#{formulaId}
	</delete>
	
	<delete id="removeBySolId" >
		DELETE FROM BPM_FORMULA_MAPPING 
		WHERE SOL_ID_=#{solId} and ACT_DEF_ID_=#{actDefId} and	NODE_ID_=#{nodeId}
	</delete>
	
	
</mapper>