<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.bpm.core.entity.BpmMessageBoard">
	<resultMap id="BpmMessageBoard" type="com.redxun.bpm.core.entity.BpmMessageBoard">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="instId" column="INST_ID_" jdbcType="VARCHAR"/>
		<result property="messageAuthor" column="MESSAGE_AUTHOR_" jdbcType="VARCHAR"/>
		<result property="messageAuthorId" column="MESSAGE_AUTHOR_ID_" jdbcType="VARCHAR"/>
		<result property="messageContent" column="MESSAGE_CONTENT_" jdbcType="CLOB"/>
		<result property="fileId" column="FILE_ID_" jdbcType="VARCHAR"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="messageAuthorId" column="MESSAGE_AUTHOR_ID_" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="create" parameterType="com.redxun.bpm.core.entity.BpmMessageBoard">
		INSERT INTO BPM_MESSAGE_BOARD
		(ID_,INST_ID_,MESSAGE_AUTHOR_,MESSAGE_CONTENT_,FILE_ID_,TENANT_ID_,CREATE_BY_,CREATE_TIME_,UPDATE_BY_,UPDATE_TIME_,MESSAGE_AUTHOR_ID_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{instId,jdbcType=VARCHAR}, #{messageAuthor,jdbcType=VARCHAR}, #{messageContent,jdbcType=CLOB}, #{fileId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{messageAuthorId,jdbcType=VARCHAR})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="BpmMessageBoard">
		SELECT * FROM BPM_MESSAGE_BOARD 
		WHERE 
		ID_=#{id}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="BpmMessageBoard">
		SELECT * FROM BPM_MESSAGE_BOARD
		<where>
			<if test="@Ognl@isNotEmpty(whereSql)">
				${whereSql}
			</if>
		</where>
		<if test="@Ognl@isNotEmpty(orderBySql)">
			ORDER BY ${orderBySql}
		</if>
		<if test="@Ognl@isEmpty(orderBySql)">
			ORDER BY ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.redxun.bpm.core.entity.BpmMessageBoard">
		UPDATE BPM_MESSAGE_BOARD SET
		INST_ID_=#{instId,jdbcType=VARCHAR},
		MESSAGE_AUTHOR_=#{messageAuthor,jdbcType=VARCHAR},
		MESSAGE_CONTENT_=#{messageContent,jdbcType=CLOB},
		FILE_ID_=#{fileId,jdbcType=VARCHAR},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		UPDATE_TIME_=#{updateTime,jdbcType=TIMESTAMP},
		MESSAGE_AUTHOR_ID_=#{messageAuthorId,jdbcType=VARCHAR}
		WHERE
		ID_=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM BPM_MESSAGE_BOARD 
		WHERE
		ID_=#{id}
	</delete>
	
	
	<select id="getMessageBoardByInstId" parameterType="java.lang.String" resultMap="BpmMessageBoard">		
		  SELECT * FROM BPM_MESSAGE_BOARD WHERE BPM_MESSAGE_BOARD.INST_ID_ =#{instId} ORDER BY CREATE_TIME_ DESC
		
	</select>
	
	
	<select id="getInstUser" parameterType="java.lang.String" resultMap="BpmMessageBoard">		
		  SELECT MESSAGE_AUTHOR_ID_ FROM BPM_MESSAGE_BOARD WHERE BPM_MESSAGE_BOARD.INST_ID_ =#{instId} ORDER BY CREATE_TIME_ DESC
	</select>

	<delete id="deleteByInst" parameterType="java.lang.String">
		DELETE FROM BPM_MESSAGE_BOARD
		WHERE
		INST_ID_=#{instId}
	</delete>



</mapper>