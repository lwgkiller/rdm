<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.bpm.core.entity.BpmSolCtl">
	<resultMap id="BpmSolCtl" type="com.redxun.bpm.core.entity.BpmSolCtl">
		<id property="rightId" column="RIGHT_ID_" jdbcType="VARCHAR"/>
		<result property="solId" column="SOL_ID_" jdbcType="VARCHAR"/>
		<result property="userIds" column="USER_IDS_" jdbcType="CLOB"/>
		<result property="groupIds" column="GROUP_IDS_" jdbcType="CLOB"/>
		<result property="allowStartor" column="ALLOW_STARTOR_" jdbcType="VARCHAR"/>
		<result property="allowAttend" column="ALLOW_ATTEND_" jdbcType="VARCHAR"/>
		<result property="right" column="RIGHT_" jdbcType="VARCHAR"/>
		<result property="type" column="TYPE_" jdbcType="VARCHAR"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<insert id="create" parameterType="com.redxun.bpm.core.entity.BpmSolCtl">
		INSERT INTO BPM_SOL_CTL
		(RIGHT_ID_,SOL_ID_,USER_IDS_,GROUP_IDS_,ALLOW_STARTOR_,ALLOW_ATTEND_,RIGHT_,TYPE_,TENANT_ID_,CREATE_BY_,CREATE_TIME_,UPDATE_BY_,UPDATE_TIME_)
		VALUES 
		(#{rightId,jdbcType=VARCHAR}, #{solId,jdbcType=VARCHAR}, #{userIds,jdbcType=CLOB}, #{groupIds,jdbcType=CLOB}, #{allowStartor,jdbcType=VARCHAR}, #{allowAttend,jdbcType=VARCHAR}, #{right,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="BpmSolCtl">
		SELECT * FROM BPM_SOL_CTL 
		WHERE 
		RIGHT_ID_=#{rightId}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="BpmSolCtl">
		SELECT * FROM BPM_SOL_CTL
		<where>
			<if test="@Ognl@isNotEmpty(whereSql)">
				${whereSql}
			</if>
		</where>
		<if test="@Ognl@isNotEmpty(orderBySql)">
			ORDER BY ${orderBySql}
		</if>
		<if test="@Ognl@isEmpty(orderBySql)">
			ORDER BY RIGHT_ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.redxun.bpm.core.entity.BpmSolCtl">
		UPDATE BPM_SOL_CTL SET
		SOL_ID_=#{solId,jdbcType=VARCHAR},
		USER_IDS_=#{userIds,jdbcType=CLOB},
		GROUP_IDS_=#{groupIds,jdbcType=CLOB},
		ALLOW_STARTOR_=#{allowStartor,jdbcType=VARCHAR},
		ALLOW_ATTEND_=#{allowAttend,jdbcType=VARCHAR},
		RIGHT_=#{right,jdbcType=VARCHAR},
		TYPE_=#{type,jdbcType=VARCHAR},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		UPDATE_TIME_=#{updateTime,jdbcType=TIMESTAMP}
		WHERE
		RIGHT_ID_=#{rightId}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM BPM_SOL_CTL 
		WHERE
		RIGHT_ID_=#{rightId}
	</delete>
	
	<select id="getBySolIdAndType"   parameterType="java.lang.String" resultMap="BpmSolCtl">
		SELECT * FROM BPM_SOL_CTL 
		WHERE 
		SOL_ID_=#{solId} and TYPE_=#{type}
	</select>
	
	<select id="getBySolAndTypeAndRight"   parameterType="java.lang.String" resultMap="BpmSolCtl">
		SELECT * FROM BPM_SOL_CTL 
		WHERE  SOL_ID_=#{solId} and TYPE_=#{type} and RIGHT_=#{right}
	</select>
	
	<delete id="delBySolId" parameterType="java.lang.String">
		delete from BPM_SOL_CTL where SOL_ID_=#{solId}
	</delete>
</mapper>