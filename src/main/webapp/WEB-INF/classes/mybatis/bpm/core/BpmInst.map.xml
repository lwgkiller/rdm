<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.bpm.core.entity.BpmInst">
	<resultMap id="BpmInst" type="com.redxun.bpm.core.entity.BpmInst">
		<id property="instId" column="INST_ID_" jdbcType="VARCHAR"/>
		<result property="defId" column="DEF_ID_" jdbcType="VARCHAR"/>
		<result property="actInstId" column="ACT_INST_ID_" jdbcType="VARCHAR"/>
		<result property="actDefId" column="ACT_DEF_ID_" jdbcType="VARCHAR"/>
		<result property="solId" column="SOL_ID_" jdbcType="VARCHAR"/>
		<result property="instNo" column="INST_NO_" jdbcType="VARCHAR"/>
		<result property="isUseBmodel" column="IS_USE_BMODEL_" jdbcType="VARCHAR"/>
		<result property="subject" column="SUBJECT_" jdbcType="VARCHAR"/>
		<result property="status" column="STATUS_" jdbcType="VARCHAR"/>
		<result property="version" column="VERSION_" jdbcType="NUMERIC"/>
		<result property="busKey" column="BUS_KEY_" jdbcType="VARCHAR"/>
		<result property="isLive" column="IS_LIVE_" jdbcType="VARCHAR"/>
		<result property="liveInstId" column="LIVE_INST_ID_" jdbcType="VARCHAR"/>
		<result property="checkFileId" column="CHECK_FILE_ID_" jdbcType="VARCHAR"/>

		<result property="isTest" column="IS_TEST_" jdbcType="VARCHAR"/>
		<result property="errors" column="ERRORS_" jdbcType="CLOB"/>
		<result property="endTime" column="END_TIME_" jdbcType="TIMESTAMP"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="dataSaveMode" column="DATA_SAVE_MODE_" jdbcType="VARCHAR"/>
		<result property="supportMobile" column="SUPPORT_MOBILE_" jdbcType="NUMERIC"/>
		<result property="boDefId" column="BO_DEF_ID_" jdbcType="VARCHAR"/>
		<result property="billNo" column="BILL_NO_" jdbcType="VARCHAR"/>
		<result property="startDepId" column="START_DEP_ID_" jdbcType="VARCHAR"/>
		<result property="startDepFull" column="START_DEP_FULL_" jdbcType="VARCHAR"/>
		<result property="solKey" column="SOL_KEY_" jdbcType="VARCHAR"/>
		<result property="solName" column="SOL_NAME_" jdbcType="VARCHAR"/>
		<result property="icon" column="ICON_" jdbcType="VARCHAR"/>
		<result property="color" column="COLOR_" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="create" parameterType="com.redxun.bpm.core.entity.BpmInst">
		INSERT INTO BPM_INST
		(INST_ID_,DEF_ID_,ACT_INST_ID_,ACT_DEF_ID_,SOL_ID_,INST_NO_,IS_USE_BMODEL_,SUBJECT_,STATUS_,VERSION_,BUS_KEY_,IS_LIVE_,LIVE_INST_ID_,CHECK_FILE_ID_,IS_TEST_,ERRORS_,END_TIME_,TENANT_ID_,CREATE_BY_,CREATE_TIME_,UPDATE_BY_,UPDATE_TIME_,DATA_SAVE_MODE_,SUPPORT_MOBILE_,BO_DEF_ID_,BILL_NO_,START_DEP_ID_,START_DEP_FULL_,SOL_KEY_)
		VALUES 
		(#{instId,jdbcType=VARCHAR}, #{defId,jdbcType=VARCHAR}, #{actInstId,jdbcType=VARCHAR}, #{actDefId,jdbcType=VARCHAR}, #{solId,jdbcType=VARCHAR}, #{instNo,jdbcType=VARCHAR}, #{isUseBmodel,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{version,jdbcType=NUMERIC}, #{busKey,jdbcType=VARCHAR}, #{isLive,jdbcType=VARCHAR}, #{liveInstId,jdbcType=VARCHAR}, #{checkFileId,jdbcType=VARCHAR},  #{isTest,jdbcType=VARCHAR}, #{errors,jdbcType=CLOB}, #{endTime,jdbcType=TIMESTAMP}, #{tenantId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{dataSaveMode,jdbcType=VARCHAR}, #{supportMobile,jdbcType=NUMERIC}, #{boDefId,jdbcType=VARCHAR}, #{billNo,jdbcType=VARCHAR}, #{startDepId,jdbcType=VARCHAR}, #{startDepFull,jdbcType=VARCHAR}, #{solKey,jdbcType=VARCHAR})
	</insert>
	

	<select id="query" parameterType="java.util.Map" resultMap="BpmInst">
		SELECT * FROM BPM_INST
		<where>
			<if test="@Ognl@isNotEmpty(whereSql)">
				${whereSql}
			</if>
		</where>
		<if test="@Ognl@isNotEmpty(orderBySql)">
			ORDER BY ${orderBySql}
		</if>
		<if test="@Ognl@isEmpty(orderBySql)">
			ORDER BY INST_ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.redxun.bpm.core.entity.BpmInst">
		UPDATE BPM_INST SET
		DEF_ID_=#{defId,jdbcType=VARCHAR},
		ACT_INST_ID_=#{actInstId,jdbcType=VARCHAR},
		ACT_DEF_ID_=#{actDefId,jdbcType=VARCHAR},
		SOL_ID_=#{solId,jdbcType=VARCHAR},
		INST_NO_=#{instNo,jdbcType=VARCHAR},
		IS_USE_BMODEL_=#{isUseBmodel,jdbcType=VARCHAR},
		SUBJECT_=#{subject,jdbcType=VARCHAR},
		STATUS_=#{status,jdbcType=VARCHAR},
		VERSION_=#{version,jdbcType=NUMERIC},
		BUS_KEY_=#{busKey,jdbcType=VARCHAR},
		IS_LIVE_=#{isLive,jdbcType=VARCHAR},
		LIVE_INST_ID_=#{liveInstId,jdbcType=VARCHAR},
		CHECK_FILE_ID_=#{checkFileId,jdbcType=VARCHAR},
		IS_TEST_=#{isTest,jdbcType=VARCHAR},
		ERRORS_=#{errors,jdbcType=CLOB},
		END_TIME_=#{endTime,jdbcType=TIMESTAMP},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		UPDATE_TIME_=#{updateTime,jdbcType=TIMESTAMP},
		DATA_SAVE_MODE_=#{dataSaveMode,jdbcType=VARCHAR},
		SUPPORT_MOBILE_=#{supportMobile,jdbcType=NUMERIC},
		BO_DEF_ID_=#{boDefId,jdbcType=VARCHAR},
		BILL_NO_=#{billNo,jdbcType=VARCHAR},
		START_DEP_ID_=#{startDepId,jdbcType=VARCHAR},
		START_DEP_FULL_=#{startDepFull,jdbcType=VARCHAR},
		SOL_KEY_=#{solKey,jdbcType=VARCHAR}
		WHERE
		INST_ID_=#{instId}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM BPM_INST 
		WHERE
		INST_ID_=#{instId}
	</delete>


	<select id="getByActInstId"   parameterType="java.util.Map" resultMap="BpmInst">
		SELECT * FROM BPM_INST
		WHERE
		ACT_INST_ID_=#{actInstId}
	</select>


	<sql id="fieldsSql">
		b.INST_ID_,b.DEF_ID_,b.ACT_INST_ID_,b.ACT_DEF_ID_,
  		b.SOL_ID_,b.SOL_KEY_,b.INST_NO_,b.IS_USE_BMODEL_,b.SUBJECT_,
  		b.STATUS_,b.VERSION_,b.BUS_KEY_,b.BILL_NO_,b.CHECK_FILE_ID_,
		b.IS_TEST_,b.IS_LIVE_,b.END_TIME_,b.TENANT_ID_,
  		b.CREATE_BY_,b.CREATE_TIME_,b.UPDATE_BY_,b.UPDATE_TIME_,b.START_DEP_ID_,b.START_DEP_FULL_
	</sql>

	<select id="getMyCheckInstCounts" parameterType="java.util.Map" resultType="java.lang.Long">
		select count(*) from (select distinct <include refid="fieldsSql"></include> from bpm_inst b left join bpm_node_jump c on b.ACT_INST_ID_=c.ACT_INST_ID_ where HANDLER_ID_=#{userId}
		<if test="subject!=null">
			and b.subject_ like #{subject}
		</if>
		<if test="billNo!=null">
			and b.bill_no_ like #{billNo}
		</if>
		<if test="status!=null">
			and b.status_ =#{status}
		</if>
		<if test="enableMobile!=null">
			and b.SUPPORT_MOBILE_ =1
		</if>
		<if test="createtime1!=null">
			and b.CREATE_TIME_ &gt;= #{createtime1}
		</if>
		<if test="createtime2!=null">
			and b.CREATE_TIME_ &lt;= #{createtime2}
		</if>
		<if test="createtime3!=null">
			and c.CREATE_TIME_ &gt;= #{createtime3}
		</if>
		<if test="ccreatetime4!=null">
			and c.CREATE_TIME_ &lt;= #{createtime4}
		</if>
		) V
	</select>

	<!-- 按最新的实例ID获得审批节点及及状态 -->
	<select id="getMyCheckInst" parameterType="java.util.Map" resultMap="BpmInst">
		select distinct <include refid="fieldsSql"></include> from bpm_inst b left join bpm_node_jump c on b.ACT_INST_ID_=c.ACT_INST_ID_
		<if test="treeId!=null or @Ognl@isNotEmpty(keyList)">
			LEFT JOIN BPM_SOLUTION BS ON b.SOL_ID_ = BS.SOL_ID_
		</if>
		where HANDLER_ID_=#{userId}
		<if test="tenantId!=null">
			and b.TENANT_ID_ like #{tenantId}
		</if>
		<if test="@Ognl@isNotEmpty(keyList)">
			and BS.KEY_ in <foreach collection="keyList"  item="id" separator="," open="(" close=")">#{id}</foreach>
		</if>
		<if test="treeId!=null">
			and BS.TREE_ID_=#{treeId}
		</if>
		<if test="subject!=null">
			and b.subject_ like #{subject}
		</if>
		<if test="billNo!=null">
			and b.bill_no_ like #{billNo}
		</if>
		<if test="status!=null">
			and b.status_ =#{status}
		</if>
		<if test="enableMobile!=null">
			and b.ENABLE_MOBILE_ =1
		</if>
		<if test="createtime1!=null">
			and b.CREATE_TIME_ &gt;= #{createtime1}
		</if>
		<if test="createtime2!=null">
			and b.CREATE_TIME_ &lt;= #{createtime2}
		</if>
		<if test="createtime3!=null">
			and c.CREATE_TIME_ &gt;= #{createtime3}
		</if>
		<if test="ccreatetime4!=null">
			and c.CREATE_TIME_ &lt;= #{createtime4}
		</if>
		<if test="orderByClause!=null">
			ORDER BY ${orderByClause}
		</if>
		<if test="orderByClause==null">
			ORDER BY b.CREATE_TIME_ DESC
		</if>
	</select>

	<select id="getByBusKey"  resultMap="BpmInst">
		select * from BPM_INST where BUS_KEY_=#{busKey}
	</select>

	<select id="getInstsByAdminTreeId" parameterType="java.util.Map" resultMap="BpmInst">
		select * from (
		SELECT <include refid="fieldsSql"></include> from BPM_INST b LEFT JOIN BPM_SOLUTION s on b.SOL_ID_=s.SOL_ID_
		<where>
			<if test="whereSql!=null">
				${whereSql}
			</if>
		</where>) tmp
		<if test="orderBySql!=null">
			ORDER BY  ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY CREATE_TIME_ DESC
		</if>
	</select>

	<select id="getMyInstBySolutionId" parameterType="java.util.Map" resultMap="BpmInst">
	 SELECT B.*
	 FROM BPM_INST B
     LEFT JOIN BPM_INST_CC C ON C.INST_ID_= B.INST_ID_
     LEFT JOIN BPM_INST_CP P ON P.CC_ID_=C.CC_ID_
     WHERE B.SOL_ID_=#{solId} AND (B.CREATE_BY_=#{userId} OR P.USER_ID_=#{userId}) AND B.STATUS_ = #{status}
	</select>
	
	<select id="getMyCommonInst_mysql" parameterType="java.util.Map" resultMap="BpmInst">
		 select sol.sol_id_,sol.name_ SOL_NAME_,sol.ICON_,sol.COLOR_  from bpm_solution sol where sol_id_ in(
		 select sol_id_ 
		from bpm_inst where create_by_ = #{userId} 
		group by SOL_ID_ order by count(1) desc ) LIMIT 10
	</select>
	
	<select id="getMyCommonInst_oracle" parameterType="java.util.Map" resultMap="BpmInst">
		 select sol.sol_id_,sol.name_ SOL_NAME_,sol.ICON_,sol.COLOR_  from bpm_solution sol where sol_id_ in(
		 select sol_id_ 
		from bpm_inst where create_by_ = #{userId} 
		group by SOL_ID_ order by count(1) desc ) where rownum &lt;= 10
	</select>
	
	<select id="getMyCommonInst_sqlserver" parameterType="java.util.Map" resultMap="BpmInst">
		 select top 10 sol.sol_id_,sol.name_ SOL_NAME_,sol.ICON_,sol.COLOR_ from bpm_solution sol 
			where sol_id_ in ( select TOP (100) PERCENT sol_id_ from bpm_inst where create_by_ = #{userId}  group by SOL_ID_ order by count(1) desc )  
	</select>

	<select id="getMyInst" parameterType="java.util.Map" resultMap="BpmInst">
		SELECT v.*
		FROM BPM_INST v
		WHERE  v.CREATE_BY_=#{CREATE_BY_}
		<if test="enableMobile!=null">
			and b.ENABLE_MOBILE_ =1
		</if>
		<if test="SUBJECT_!=null">
			and v.subject_ like #{SUBJECT_}
		</if>

		<if test="CREATE_TIME__START!=null">
			and v.CREATE_TIME_ &gt;= #{CREATE_TIME__START}
		</if>
		<if test="CREATE_TIME__END!=null">
			and v.CREATE_TIME_ &lt;= #{CREATE_TIME__END}
		</if>
		<if test="STATUS_!=null">
			and v.STATUS_ = #{STATUS_}
		</if>
		<if test="@Ognl@isEmpty(STATUS_)">
			and v.STATUS_ != 'DRAFTED'
		</if>
		<if test="orderBySql!=null">
			ORDER BY  ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY CREATE_TIME_ DESC
		</if>

	</select>

	<select id="getMyDrafts" parameterType="java.util.Map" resultMap="BpmInst">
		SELECT a.INST_ID_,a.DEF_ID_,a.ACT_INST_ID_,a.ACT_DEF_ID_,
		a.SOL_ID_,a.INST_NO_,a.IS_USE_BMODEL_,a.SUBJECT_,
		a.STATUS_,a.VERSION_,a.BUS_KEY_,a.BILL_NO_,a.CHECK_FILE_ID_,
		a.IS_TEST_,a.END_TIME_,a.TENANT_ID_,a.START_DEP_ID_,a.START_DEP_FULL_,
		a.CREATE_BY_,a.CREATE_TIME_,a.UPDATE_BY_,a.UPDATE_TIME_,
		b.TREE_ID_,b.TREE_PATH_ from BPM_INST a , BPM_SOLUTION b
		WHERE a.sol_id_=b.sol_id_ and a.CREATE_BY_=#{CREATE_BY_} and a.status_='DRAFTED'
		<if test="TENANT_ID_!=null">
			and	b.TENANT_ID_ like #{TENANT_ID_}
		</if>
		<if test="TREE_PATH_!=null">
			and	b.TREE_PATH_ like #{TREE_PATH_}
		</if>
		<if test="BILL_NO_!=null">
			and	a.BILL_NO_ like #{BILL_NO_}
		</if>

		<if test="SUBJECT_!=null">
			and a.subject_ like #{SUBJECT_}
		</if>

		<if test="CREATE_TIME__START!=null">
			and a.CREATE_TIME_ &gt;= #{CREATE_TIME__START}
		</if>
		<if test="CREATE_TIME__END!=null">
			and a.CREATE_TIME_ &lt;= #{CREATE_TIME__END}
		</if>
	</select>

	<select id="getInstsForSaasAdmin" parameterType="java.util.Map" resultMap="BpmInst">
		SELECT a.INST_ID_,a.DEF_ID_,a.ACT_INST_ID_,a.ACT_DEF_ID_,
		a.SOL_ID_,a.INST_NO_,a.IS_USE_BMODEL_,a.SUBJECT_,
		a.STATUS_,a.VERSION_,a.BUS_KEY_,a.BILL_NO_,a.CHECK_FILE_ID_,
		a.IS_TEST_,a.IS_LIVE_,a.END_TIME_,a.TENANT_ID_,a.START_DEP_ID_,a.START_DEP_FULL_,
		a.CREATE_BY_,a.CREATE_TIME_,a.UPDATE_BY_,a.UPDATE_TIME_,
		b.TREE_ID_,b.TREE_PATH_ from BPM_INST a ,BPM_SOLUTION b
		where a.SOL_ID_=b.SOL_ID_ and a.TENANT_ID_=#{TENANT_ID_}
		<if test="treeId!=null">
			and	a.TREE_ID_=#{treeId}
		</if>
		<if test="TREE_PATH_!=null">
			and b.TREE_PATH_ like #{TREE_PATH_}
		</if>
		<if test="CREATE_BY_!=null">
			and a.CREATE_BY_=#{CREATE_BY_}
		</if>
		<if test="SUBJECT_!=null">
			and a.subject_ like #{SUBJECT_}
		</if>
		<if test="BILL_NO_!=null">
			and a.bill_no_ like #{BILL_NO_}
		</if>
		<if test="CREATE_TIME__START!=null">
			and a.CREATE_TIME_ &gt;= #{CREATE_TIME__START}
		</if>
		<if test="CREATE_TIME__END!=null">
			and a.CREATE_TIME_ &lt;= #{CREATE_TIME__END}
		</if>
		<if test="STATUS_!=null">
			and a.STATUS_ = #{STATUS_}
		</if>
		<if test="orderBySql==null">
			ORDER BY a.CREATE_TIME_ DESC
		</if>
	</select>

	<select id="getInstsByTreeId" parameterType="java.util.Map" resultMap="BpmInst">
		select distinct * from (
		SELECT a.INST_ID_,a.DEF_ID_,a.ACT_INST_ID_,a.ACT_DEF_ID_,
		a.SOL_ID_,a.INST_NO_,a.IS_USE_BMODEL_,a.SUBJECT_,
		a.STATUS_,a.VERSION_,a.BUS_KEY_,a.BILL_NO_,a.CHECK_FILE_ID_,
		a.IS_TEST_,a.END_TIME_,a.TENANT_ID_,a.START_DEP_ID_,a.START_DEP_FULL_,
		a.CREATE_BY_,a.CREATE_TIME_,a.UPDATE_BY_,a.UPDATE_TIME_,
		b.TREE_ID_,b.TREE_PATH_ from BPM_INST a , BPM_SOLUTION b,
		bpm_auth_setting c, bpm_auth_rights d, bpm_auth_def e where a.TENANT_ID_=#{bTENANT_ID_} and a.SOL_ID_=b.SOL_ID_ and c.ENABLE_='yes'  and a.IS_LIVE_!='YES'
		<if test="grantType=='bpmAssortment'">
			and	b.TREE_ID_=e.TREE_ID_
		</if>
		<if test="grantType!='bpmAssortment'">
			and	b.SOL_ID_=e.SOL_ID_
		</if>
		<if test="treeId!=null">
			and	b.TREE_ID_=#{treeId}
		</if>
		and e.SETTING_ID_ = c.ID_  and c.ID_ =d.SETTING_ID_ and d.RIGHT_TYPE_='inst' and d.TYPE_='everyone'

		union all

		<foreach collection="profileMap" index="key"  item="ent" separator="union all">
			SELECT  a.INST_ID_,a.DEF_ID_,a.ACT_INST_ID_,a.ACT_DEF_ID_,
			a.SOL_ID_,a.INST_NO_,a.IS_USE_BMODEL_,a.SUBJECT_,
			a.STATUS_,a.VERSION_,a.BUS_KEY_,a.BILL_NO_,a.CHECK_FILE_ID_,
			a.IS_TEST_,a.END_TIME_,a.TENANT_ID_,a.START_DEP_ID_,a.START_DEP_FULL_,
			a.CREATE_BY_,a.CREATE_TIME_,a.UPDATE_BY_,a.UPDATE_TIME_,
			b.TREE_ID_,b.TREE_PATH_ from BPM_INST a , BPM_SOLUTION b,
			bpm_auth_setting c, bpm_auth_rights d, bpm_auth_def e where a.TENANT_ID_=#{bTENANT_ID_} and a.SOL_ID_=b.SOL_ID_ and c.ENABLE_='yes'
			<if test="grantType=='bpmAssortment'">
				and	b.TREE_ID_=e.TREE_ID_
			</if>
			<if test="grantType!='bpmAssortment'">
				and	b.SOL_ID_=e.SOL_ID_
			</if>
			<if test="treeId!=null">
				and	b.TREE_ID_=#{treeId}
			</if>
			and e.SETTING_ID_ = c.ID_  and c.ID_ =d.SETTING_ID_ and d.RIGHT_TYPE_='inst' and d.TYPE_=#{key}
			and d.AUTH_ID_ in  <foreach collection="ent"  item="id" separator="," open="(" close=")">#{id}</foreach>
		</foreach>
		) v

		<where>
			<if test="bTREE_PATH_!=null">
				and v.TREE_PATH_ like #{bTREE_PATH_}
			</if>
			<if test="bCREATE_BY_!=null">
				and v.CREATE_BY_=#{bCREATE_BY_}
			</if>
			<if test="SUBJECT_!=null">
				and v.subject_ like #{SUBJECT_}
			</if>
			<if test="BILL_NO_!=null">
				and v.bill_no_ like #{BILL_NO_}
			</if>
			<if test="bCREATE_TIME__START!=null">
				and v.CREATE_TIME_ &gt;= #{bCREATE_TIME__START}
			</if>
			<if test="bCREATE_TIME__END!=null">
				and v.CREATE_TIME_ &lt;= #{bCREATE_TIME__END}
			</if>
			<if test="bSTATUS_!=null">
				and v.STATUS_ = #{bSTATUS_}
			</if>
		</where>

		<if test="orderBySql!=null">
			ORDER BY ${orderBySql}
		</if>
		<if test="orderBySql==null">
			ORDER BY v.CREATE_TIME_ DESC
		</if>
	</select>

	<select id="getCategoryTree"  resultType="java.util.HashMap">
		select TREE_ID_,TREE_PATH_,sum(amount) AMOUNT from (
		SELECT b.TREE_ID_, b.TREE_PATH_,count(*) amount from BPM_INST a , BPM_SOLUTION b,
		bpm_auth_setting c, bpm_auth_rights d, bpm_auth_def e where a.TENANT_ID_=#{tenantId} and a.SOL_ID_=b.SOL_ID_ and c.ENABLE_='yes'
		<if test="grantType=='bpmAssortment'">
			and	b.TREE_ID_=e.TREE_ID_
		</if>
		<if test="grantType!='bpmAssortment'">
			and	b.SOL_ID_=e.SOL_ID_
		</if>
		and e.SETTING_ID_ = c.ID_  and c.ID_ =d.SETTING_ID_ and d.RIGHT_TYPE_='inst' and d.TYPE_='everyone'
		GROUP BY b.TREE_ID_,b.TREE_PATH_

		union all

		<foreach collection="profileMap" index="key"  item="ent" separator="union all">
			SELECT b.TREE_ID_,TREE_PATH_,count(*) amount from BPM_INST a , BPM_SOLUTION b,
			bpm_auth_setting c, bpm_auth_rights d, bpm_auth_def e where a.TENANT_ID_=#{tenantId} and a.SOL_ID_=b.SOL_ID_ and c.ENABLE_='yes'
			<if test="grantType=='bpmAssortment'">
				and	b.TREE_ID_=e.TREE_ID_
			</if>
			<if test="grantType!='bpmAssortment'">
				and	b.SOL_ID_=e.SOL_ID_
			</if>
			and e.SETTING_ID_ = c.ID_  and c.ID_ =d.SETTING_ID_ and d.RIGHT_TYPE_='inst' and d.TYPE_=#{key}
			and d.AUTH_ID_ in  <foreach collection="ent"  item="id" separator="," open="(" close=")">#{id}</foreach>
			GROUP BY b.TREE_ID_,b.TREE_PATH_
		</foreach>
		) v GROUP BY TREE_ID_,TREE_PATH_
	</select>

	<select id="getBpmInstListBySolId"  resultMap="BpmInst">
		 SELECT A.* FROM BPM_INST A WHERE A.SOL_ID_=#{solId} AND IS_TEST_='YES'
	</select>

	<select id="get"  resultMap="BpmInst">
		select * from BPM_INST where INST_ID_=#{instId}
	</select>

	<select id="getMyInstCount"  resultType="java.lang.Integer">
		select count(*) from BPM_INST where CREATE_BY_=#{userId}
		<if test="@Ognl@isNotEmpty(status)">
			and STATUS_ =#{status}
		</if>
	</select>

	<select id="getCountsByActDefId" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*) from BPM_INST where ACT_DEF_ID_=#{actDefId}
	</select>

	<select id="getCountsBySolId" parameterType="java.lang.String"  resultType="java.lang.Integer">
		select count(*) from BPM_INST where SOL_ID_=#{solId}
	</select>

</mapper>