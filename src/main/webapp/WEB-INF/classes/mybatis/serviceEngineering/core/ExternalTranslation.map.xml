<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.serviceEngineering.core.dao.ExternalTranslationDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="startIndex != null and startIndex != '' ">
                limit ${startIndex}, ${pageSize}
            </if>
            <if test="startIndex == null or startIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>

    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>

    <select id="queryApplyList" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        service_engineering_exernal_trans_base.*,
        bpm_inst.STATUS_ as status,
        bpm_inst.INST_ID_ as instId,
        bpm_inst.ACT_INST_ID_,
        b.*
        FROM
        service_engineering_exernal_trans_base
        left join bpm_inst on service_engineering_exernal_trans_base.id=bpm_inst.BUS_KEY_
        LEFT JOIN service_engineering_attacheddoctrans_apply b ON service_engineering_exernal_trans_base.baseInfoId = b.id
        <where>
            <if test="baseInfoId != null and baseInfoId != ''">
                service_engineering_exernal_trans_base.baseInfoId = #{baseInfoId}
            </if>
            <if test="applyNumber != null and applyNumber != ''">
                service_engineering_exernal_trans_base.applyNumber like CONCAT('%',#{applyNumber},'%')
            </if>
            <if test="creatorName != null and creatorName != ''">
                AND service_engineering_exernal_trans_base.creatorName = #{creatorName}
            </if>
            <if test="creatorDeptId != null and creatorDeptId != ''">
                AND service_engineering_exernal_trans_base.departId = #{creatorDeptId}
            </if>
            <if test="status != null and status != ''">
                AND bpm_inst.STATUS_ = #{status}
            </if>
            <if test="roleName !=null and roleName !=''">
                <choose>
                    <when test="roleName =='other'">
                        AND (bpm_inst.STATUS_ != 'DRAFTED' OR service_engineering_exernal_trans_base.CREATE_BY_ = #{currentUserId})
                    </when>
                </choose>
            </if>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>

    <select id="countApplyList" parameterType="com.alibaba.fastjson.JSONObject" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        service_engineering_exernal_trans_base
        left join bpm_inst on service_engineering_exernal_trans_base.id=bpm_inst.BUS_KEY_
        <where>
            <if test="baseInfoId != null and baseInfoId != ''">
                service_engineering_exernal_trans_base.baseInfoId = #{baseInfoId}
            </if>
            <if test="applyNumber != null and applyNumber != ''">
                service_engineering_exernal_trans_base.applyNumber like CONCAT('%',#{applyNumber},'%')
            </if>
            <if test="creatorName != null and creatorName != ''">
                AND service_engineering_exernal_trans_base.creatorName like CONCAT('%',#{creatorName},'%')
            </if>
            <if test="creatorDeptId != null and creatorDeptId != ''">
                AND service_engineering_exernal_trans_base.departId = #{creatorDeptId}
            </if>
            <if test="status != null and status != ''">
                AND bpm_inst.STATUS_ = #{status}
            </if>
            <if test="roleName !=null and roleName !=''">
                <choose>
                    <when test="roleName =='other'">
                        AND (bpm_inst.STATUS_ != 'DRAFTED' OR service_engineering_exernal_trans_base.CREATE_BY_ = #{currentUserId})
                    </when>
                </choose>
            </if>
        </where>

    </select>

    <select id="queryDemandList" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        select
        service_engineering_exernal_trans_detail.*
        from service_engineering_exernal_trans_detail
        <where>
            <if test="applyId !=null and applyId !=''">
                service_engineering_exernal_trans_detail.applyId = #{applyId}
            </if>
        </where>
    </select>

    <select id="queryApplyDetail" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            a.id,
            a.applyNumber,
            a.baseInfoId,
            a.exTransDesc,
            b.*,
            bpm_inst.INST_ID_ AS instId
        FROM
            service_engineering_exernal_trans_base a
            LEFT JOIN service_engineering_attacheddoctrans_apply b ON a.baseInfoId = b.id
            LEFT JOIN bpm_inst ON a.id = bpm_inst.BUS_KEY_
        WHERE
            a.id = #{id}
    </select>

    <select id="queryBaseInfo" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        SELECT *
        FROM service_engineering_attacheddoctrans_apply
        WHERE
            id = #{baseInfoId}
    </select>

    <insert id="insertApply" parameterType="com.alibaba.fastjson.JSONObject">
        insert into service_engineering_exernal_trans_base(
        id
        ,baseInfoId
        ,exTransDesc
        ,creatorName
        ,CREATE_BY_
        ,CREATE_TIME_
        )values(
        #{id,jdbcType=VARCHAR}
        ,#{baseInfoId,jdbcType=VARCHAR}
        ,#{exTransDesc,jdbcType=VARCHAR}
        ,#{creatorName,jdbcType=VARCHAR}
        ,#{CREATE_BY_,jdbcType=VARCHAR}
        ,#{CREATE_TIME_ ,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertDemand" parameterType="com.alibaba.fastjson.JSONObject">
        insert into service_engineering_exernal_trans_detail(
        id
        ,applyId
        ,outFileId
        ,outFileNum
        ,outFileType
        ,outFileTotal
        ,outFileName
        ,outRate
        ,outDesc
        ,CREATE_BY_
        ,CREATE_TIME_
        )values(
         #{id,jdbcType=VARCHAR}
        ,#{applyId,jdbcType=VARCHAR}
        ,#{outFileId,jdbcType=VARCHAR}
        ,#{outFileNum,jdbcType=VARCHAR}
        ,#{outFileType,jdbcType=VARCHAR}
        ,#{outFileTotal,jdbcType=VARCHAR}
        ,#{outFileName,jdbcType=VARCHAR}
        ,#{outRate,jdbcType=VARCHAR}
        ,#{outDesc,jdbcType=VARCHAR}
        ,#{CREATE_BY_,jdbcType=VARCHAR}
        ,#{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="updateApply" parameterType="com.alibaba.fastjson.JSONObject">
        update service_engineering_exernal_trans_base
        set
        exTransDesc=#{exTransDesc,jdbcType=VARCHAR},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        where
        id=#{id}
    </update>

    <update id="updateApplyNumber" parameterType="com.alibaba.fastjson.JSONObject">
        update service_engineering_exernal_trans_base
        set
        applyNumber=#{applyNumber,jdbcType=VARCHAR}
        where
        id=#{id}
    </update>

    <update id="updateDemand" parameterType="com.alibaba.fastjson.JSONObject">
        update service_engineering_exernal_trans_detail
        set
        returnFileId=#{returnFileId,jdbcType=VARCHAR},
        returnFileName=#{returnFileName,jdbcType=VARCHAR},
        returnFileTime=#{returnFileTime,jdbcType=VARCHAR},
        returnDesc=#{returnDesc,jdbcType=VARCHAR},
        outFileNum=#{outFileNum,jdbcType=VARCHAR},
        outFileTotal=#{outFileTotal,jdbcType=VARCHAR},
        outRate=#{outRate,jdbcType=VARCHAR},
        outDesc=#{outDesc,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR}
        WHERE
        <if test="id != null and id != ''">
            id=#{id}
        </if>
        <if test="updateFileId != null and updateFileId != ''">
            returnFileId=#{updateFileId}
        </if>
    </update>

    <!--这个模块整体的重用写的混乱不堪，只能采取冗余增量的方式，避免干涉，只更新回传文件信息-->
    <update id="updateReturnFile" parameterType="com.alibaba.fastjson.JSONObject">
        update service_engineering_exernal_trans_detail
        set
        returnFileId=#{returnFileId,jdbcType=VARCHAR},
        returnFileName=#{returnFileName,jdbcType=VARCHAR},
        returnFileTime=#{returnFileTime,jdbcType=VARCHAR},
        returnDesc=#{returnDesc,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR}
        WHERE
        <if test="id != null and id != ''">
            id=#{id}
        </if>
        <if test="updateFileId != null and updateFileId != ''">
            returnFileId=#{updateFileId}
        </if>
    </update>
    <!--这个模块整体的重用写的混乱不堪，只能采取冗余增量的方式，避免干涉，只更新：文件类型,文件数量,外发字符数,重复率-->
    <update id="update4Attribute" parameterType="com.alibaba.fastjson.JSONObject">
        update service_engineering_exernal_trans_detail
        set
        outFileType=#{outFileType,jdbcType=VARCHAR},
        outFileTotal=#{outFileTotal,jdbcType=VARCHAR},
        outFileNum=#{outFileNum,jdbcType=VARCHAR},
        outRate=#{outRate,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR}
        WHERE
        <if test="id != null and id != ''">
            id=#{id}
        </if>
        <if test="updateFileId != null and updateFileId != ''">
            returnFileId=#{updateFileId}
        </if>
    </update>

    <delete id="deleteApply" parameterType="com.alibaba.fastjson.JSONObject">
        delete from service_engineering_exernal_trans_base
        <where>
            <if test="ids != null and ids != ''">
                id in
                <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>

    <delete id="deleteDemand" parameterType="com.alibaba.fastjson.JSONObject">
        delete from service_engineering_exernal_trans_detail
        <where>
            <if test="ids != null and ids != ''">
                id in
                <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="applyIds != null and applyIds != ''">
                AND applyId in
                <foreach collection="applyIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>

    <select id="queryDemand" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        SELECT *
        FROM service_engineering_exernal_trans_detail
        WHERE
            id = #{demandId}
    </select>

    <sql id="query_where">
        <if test="transApplyId !=null and transApplyId !=''">
            AND service_engineering_attacheddoctrans_apply.transApplyId like CONCAT('%',#{transApplyId},'%')
        </if>
        <if test="manualType !=null and manualType !=''">
            AND service_engineering_attacheddoctrans_apply.manualType = #{manualType}
        </if>
        <if test="saleType !=null and saleType !=''">
            AND service_engineering_attacheddoctrans_apply.saleType like CONCAT('%',#{saleType},'%')
        </if>
        <if test="designType !=null and designType !=''">
            AND service_engineering_attacheddoctrans_apply.designType like CONCAT('%',#{designType},'%')
        </if>
        <if test="materialCode !=null and materialCode !=''">
            AND service_engineering_attacheddoctrans_apply.materialCode like CONCAT('%',#{materialCode},'%')
        </if>
        <if test="manualCode !=null and manualCode !=''">
            AND service_engineering_attacheddoctrans_apply.manualCode like CONCAT('%',#{manualCode},'%')
        </if>
        <if test="applyTime !=null and applyTime !=''">
            AND service_engineering_attacheddoctrans_apply.applyTime = #{applyTime}
        </if>
        <if test="sourceManualLan !=null and sourceManualLan !=''">
            AND service_engineering_attacheddoctrans_apply.sourceManualLan = #{sourceManualLan}
        </if>
        <if test="targetManualLan !=null and targetManualLan !=''">
            AND service_engineering_attacheddoctrans_apply.targetManualLan like CONCAT('%',#{targetManualLan},'%')
        </if>
        <if test="translator !=null and translator !=''">
            AND service_engineering_attacheddoctrans_apply.translator like CONCAT('%',#{translator},'%')
        </if>
        <if test="outFileName !=null and outFileName !=''">
            AND service_engineering_exernal_trans_detail.outFileName like CONCAT('%',#{outFileName},'%')
        </if>
        <if test="outFileType !=null and outFileType !=''">
            AND service_engineering_exernal_trans_detail.outFileType like CONCAT('%',#{outFileType},'%')
        </if>
    </sql>

    <sql id="ljtc_query_where">

        <if test="transApplyId !=null and transApplyId !=''">
            AND service_engineering_multilanguagebuild_apply.id = #{transApplyId}
        </if>
        <if test="manualType !=null and manualType !=''">
            AND service_engineering_multilanguagebuild_apply.manualType = #{manualType}
        </if>
        <if test="saleType !=null and saleType !=''">
            AND service_engineering_multilanguagebuild_apply.saleType like CONCAT('%',#{saleType},'%')
        </if>
        <if test="designType !=null and designType !=''">
            AND service_engineering_multilanguagebuild_apply.designModel like CONCAT('%',#{designType},'%')
        </if>
        <if test="materialCode !=null and materialCode !=''">
            AND service_engineering_multilanguagebuild_apply.zhengJiCode like CONCAT('%',#{materialCode},'%')
        </if>
        <if test="manualCode !=null and manualCode !=''">
            AND service_engineering_multilanguagebuild_apply.id = #{manualCode}
        </if>
        <if test="applyTime !=null and applyTime !=''">
            AND service_engineering_multilanguagebuild_apply.applyDate = #{applyTime}
        </if>
        <if test="sourceManualLan !=null and sourceManualLan !=''">
            AND service_engineering_multilanguagebuild_apply.id = #{sourceManualLan}
        </if>
        <if test="targetManualLan !=null and targetManualLan !=''">
            AND service_engineering_multilanguagebuild_apply.multilingualText like CONCAT('%',#{targetManualLan},'%')
        </if>
        <if test="translator !=null and translator !=''">
            AND service_engineering_multilanguagebuild_apply.multilingualReviewer like CONCAT('%',#{translator},'%')
        </if>
        <if test="outFileName !=null and outFileName !=''">
            AND service_engineering_exernal_trans_detail.outFileName like CONCAT('%',#{outFileName},'%')
        </if>
        <if test="outFileType !=null and outFileType !=''">
            AND service_engineering_exernal_trans_detail.outFileType like CONCAT('%',#{outFileType},'%')
        </if>
    </sql>
    <!--新页面，只显示外发翻译文件-->
    <select id="externalTranslationFileListQuery" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        service_engineering_attacheddoctrans_apply.transApplyId,
        service_engineering_attacheddoctrans_apply.manualType,
        service_engineering_attacheddoctrans_apply.saleType,
        service_engineering_attacheddoctrans_apply.designType,
        service_engineering_attacheddoctrans_apply.materialCode,
        service_engineering_attacheddoctrans_apply.manualCode,
        service_engineering_attacheddoctrans_apply.applyTime,
        service_engineering_attacheddoctrans_apply.sourceManualLan,
        service_engineering_attacheddoctrans_apply.targetManualLan,
        service_engineering_attacheddoctrans_apply.translator,
        service_engineering_exernal_trans_detail.id,
        service_engineering_exernal_trans_detail.applyId,
        service_engineering_exernal_trans_detail.outFileId,
        service_engineering_exernal_trans_detail.outFileName,
        service_engineering_exernal_trans_detail.returnFileId,
        service_engineering_exernal_trans_detail.returnFileName,
        service_engineering_exernal_trans_detail.outFileType,
        service_engineering_exernal_trans_detail.outFileTotal,
        service_engineering_exernal_trans_detail.outFileNum,
        service_engineering_exernal_trans_detail.outRate,
        service_engineering_exernal_trans_detail.outDesc
        FROM
        service_engineering_attacheddoctrans_apply
        INNER JOIN service_engineering_exernal_trans_detail
        ON service_engineering_attacheddoctrans_apply.id = service_engineering_exernal_trans_detail.applyId
        <where>
            <include refid="query_where"/>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>

    <select id="externalMultilanguagebuildFileListQuery" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        service_engineering_exernal_trans_detail.id,
        service_engineering_exernal_trans_detail.applyId,
        service_engineering_exernal_trans_detail.outFileId,
        service_engineering_exernal_trans_detail.outFileName,
        service_engineering_exernal_trans_detail.returnFileId,
        service_engineering_exernal_trans_detail.returnFileName,
        service_engineering_exernal_trans_detail.outFileType,
        service_engineering_exernal_trans_detail.outFileTotal,
        service_engineering_exernal_trans_detail.outFileNum,
        service_engineering_exernal_trans_detail.outRate,
        service_engineering_exernal_trans_detail.outDesc,
        service_engineering_multilanguagebuild_apply.saleType,
        service_engineering_multilanguagebuild_apply.designModel as designType,
        service_engineering_multilanguagebuild_apply.applyDate as applyTime,
        service_engineering_multilanguagebuild_apply.multilingualText as targetManualLan,
        service_engineering_multilanguagebuild_apply.multilingualReviewer as translator,
        service_engineering_multilanguagebuild_apply.manualType,
        service_engineering_multilanguagebuild_apply.zhengJiCode as materialCode
        FROM
        service_engineering_multilanguagebuild_apply
        INNER JOIN  service_engineering_exernal_trans_detail
        ON service_engineering_multilanguagebuild_apply.id = service_engineering_exernal_trans_detail.applyId
        <where>
            <include refid="ljtc_query_where"/>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>
    <!---->
    <select id="externalTranslationFileListQueryCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        service_engineering_attacheddoctrans_apply
        INNER JOIN service_engineering_exernal_trans_detail
        ON service_engineering_attacheddoctrans_apply.id = service_engineering_exernal_trans_detail.applyId
        <where>
            <include refid="query_where"/>
        </where>
    </select>

    <select id="externalMultilanguagebuildFileListQueryCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        service_engineering_multilanguagebuild_apply
        INNER JOIN  service_engineering_exernal_trans_detail
        ON service_engineering_multilanguagebuild_apply.id = service_engineering_exernal_trans_detail.applyId
        <where>
            <include refid="ljtc_query_where"/>
        </where>
    </select>
</mapper>