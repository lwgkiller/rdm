<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.serviceEngineering.core.dao.WrongPartsDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="startIndex != null and startIndex != '' ">
                limit ${startIndex}, ${pageSize}
            </if>
            <if test="startIndex == null or startIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>
    <sql id="queryWhere">
        <if test="salesModel !=null and salesModel !=''">
            AND service_engineering_wrong_parts.salesModel like concat('%',#{salesModel},'%')
        </if>
        <if test="designModel !=null and designModel !=''">
            AND service_engineering_wrong_parts.designModel like concat('%',#{designModel},'%')
        </if>
        <if test="wrongPartName !=null and wrongPartName !=''">
            AND service_engineering_wrong_parts.wrongPartName like concat('%',#{wrongPartName},'%')
        </if>
        <if test="machineCode !=null and machineCode !=''">
            AND service_engineering_wrong_parts.machineCode like concat('%',#{machineCode},'%')
        </if>
        <if test="typeOfWrongPart !=null and typeOfWrongPart !=''">
            AND service_engineering_wrong_parts.typeOfWrongPart = #{typeOfWrongPart}
        </if>
        <if test="responsibleDepartmentName != null and responsibleDepartmentName != ''">
            AND os_group.NAME_ like concat('%',#{responsibleDepartmentName},'%')
        </if>
        <if test="status != null and status != ''">
            AND service_engineering_wrong_parts.status = #{status}
        </if>
        <if test="taskStatus !=null and taskStatus !=''">
            AND bpm_inst.STATUS_ = #{taskStatus}
        </if>
        <if test="roleName !=null and roleName !=''">
            <if test="roleName =='fgld' or roleName =='zlgcs' or roleName=='ptyg'">
                AND (bpm_inst.STATUS_ != 'DRAFTED' OR service_engineering_wrong_parts.CREATE_BY_ = #{currentUserId} or bpm_inst.STATUS_ is null)
            </if>
        </if>
        <if test="businessStatus !=null and businessStatus !=''">
            AND service_engineering_wrong_parts.businessStatus = #{businessStatus}
        </if>
        <if test="isPostpone !=null and isPostpone !='' and isPostpone =='true'">
            AND service_engineering_wrong_parts.promiseTime IS NOT NULL
            AND service_engineering_wrong_parts.promiseTime != ''
            AND service_engineering_wrong_parts.actualTime IS NOT NULL
            AND service_engineering_wrong_parts.actualTime != ''
            AND service_engineering_wrong_parts.actualTime > service_engineering_wrong_parts.promiseTime
        </if>
        <if test="isPostpone !=null and isPostpone !='' and isPostpone =='false'">
            AND service_engineering_wrong_parts.promiseTime IS NOT NULL
            AND service_engineering_wrong_parts.promiseTime != ''
            AND service_engineering_wrong_parts.actualTime IS NOT NULL
            AND service_engineering_wrong_parts.actualTime != ''
            AND service_engineering_wrong_parts.actualTime &lt;= service_engineering_wrong_parts.promiseTime
        </if>
    </sql>
    <!---->
    <select id="dataListQuery" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT service_engineering_wrong_parts.*,
        os_group.NAME_ AS respDepName,
        bpm_inst.STATUS_ as taskStatus,
        bpm_inst.INST_ID_ as instId,
        act_ru_task.ID_ as taskId,
        act_ru_task.NAME_ as currentProcessTask,
        os_user1.FULLNAME_ as principalUserName,
        os_user2.FULLNAME_ as XGSSRespUserName
        FROM
        service_engineering_wrong_parts
        LEFT JOIN os_group ON service_engineering_wrong_parts.responsibleDepartmentId = os_group.GROUP_ID_
        left join bpm_inst on service_engineering_wrong_parts.id=bpm_inst.BUS_KEY_
        left join act_ru_task on bpm_inst.ACT_INST_ID_=act_ru_task.PROC_INST_ID_
        LEFT JOIN os_user as os_user1 on service_engineering_wrong_parts.principalUserId=os_user1.USER_ID_
        LEFT JOIN os_user as os_user2 on service_engineering_wrong_parts.XGSSRespUserId=os_user2.USER_ID_
        <where>
            <include refid="queryWhere"/>
        </where>
        order by CREATE_TIME_ desc
        <include refid="pageSql"/>
    </select>
    <!---->
    <select id="countDataListQuery" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*)
        FROM
        service_engineering_wrong_parts
        LEFT JOIN os_group ON service_engineering_wrong_parts.responsibleDepartmentId = os_group.GROUP_ID_
        left join bpm_inst on service_engineering_wrong_parts.id=bpm_inst.BUS_KEY_
        <where>
            <include refid="queryWhere"/>
        </where>
    </select>
    <!--作废-->
    <insert id="insertData" parameterType="java.util.Map">
        insert into service_engineering_wrong_parts(
          id,
          salesModel,
          designModel,
          machineCode,
          agent,
          wrongPartName,
          typeOfWrongPart,
          problemDescription,
          causeAnalysis,
          involvedCar,
          rectificationPlan,
          newRectificationMeasures,
          riskWarning,
          XGSSRectificationPlan,
          responsibleDepartmentId,
          status,
          principalUserId,
          CREATE_BY_,
          CREATE_TIME_
        )
        values
        (
          #{id,jdbcType=VARCHAR},
          #{salesModel,jdbcType=VARCHAR},
          #{designModel,jdbcType=VARCHAR},
          #{machineCode,jdbcType=VARCHAR},
          #{agent,jdbcType=VARCHAR},
          #{wrongPartName,jdbcType=VARCHAR},
          #{typeOfWrongPart,jdbcType=VARCHAR},
          #{problemDescription,jdbcType=VARCHAR},
          #{causeAnalysis,jdbcType=VARCHAR},
          #{involvedCar,jdbcType=VARCHAR},
          #{rectificationPlan,jdbcType=VARCHAR},
          #{newRectificationMeasures,jdbcType=VARCHAR},
          #{riskWarning,jdbcType=VARCHAR},
          #{XGSSRectificationPlan,jdbcType=VARCHAR},
          #{responsibleDepartmentId,jdbcType=VARCHAR},
          #{status,jdbcType=VARCHAR},
          #{principalUserId,jdbcType=VARCHAR},
          #{CREATE_BY_,jdbcType=VARCHAR},
          #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <delete id="deleteData" parameterType="java.util.Map">
        delete from service_engineering_wrong_parts
        where id IN
        <foreach collection="businessIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--作废-->
    <select id="getGroupCountByName" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*)
        FROM os_group
        WHERE NAME_ = #{depname}
    </select>
    <!--作废-->
    <select id="getGroupIdByName" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT GROUP_ID_
        FROM os_group
        WHERE NAME_ = #{depname}
    </select>
    <!---->
    <insert id="addFileInfos" parameterType="com.alibaba.fastjson.JSONObject">
        insert into service_engineering_wrong_parts_fileinfos(
          id,
          fileName,
          fileSize,
          wrongPartsId,
          CREATE_BY_,
          CREATE_TIME_
        ) values(
          #{id,jdbcType=VARCHAR},
          #{fileName,jdbcType=VARCHAR},
          #{fileSize,jdbcType=VARCHAR},
          #{wrongPartsId,jdbcType=VARCHAR},
          #{CREATE_BY_,jdbcType=VARCHAR},
          #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <select id="queryCjzgFileList" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        select * from service_engineering_wrong_parts_fileinfos
        where wrongPartsId IN
        <foreach collection="wrongPartsIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!---->
    <delete id="deleteFileById" parameterType="java.lang.String">
        delete from service_engineering_wrong_parts_fileinfos
        where id =#{id}
    </delete>
    <!---->
    <delete id="delFileByWrongPartsId" parameterType="java.util.Map">
        delete from service_engineering_wrong_parts_fileinfos
        where wrongPartsId IN
        <foreach collection="wrongPartsIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!---->
    <select id="geRespUserByDeptId" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        os_user.USER_ID_,
        os_user.FULLNAME_
        FROM
        os_user
        LEFT JOIN os_rel_inst ON os_user.USER_ID_ = os_rel_inst.PARTY2_
        WHERE
        os_user.STATUS_ = 'IN_JOB'
        AND os_rel_inst.PARTY1_ = #{deptId}
        AND os_rel_inst.REL_TYPE_KEY_ = #{REL_TYPE_KEY_}
        <if test="TENANT_ID_ != null and TENANT_ID_ != ''">
            AND os_user.TENANT_ID_=#{TENANT_ID_}
        </if>
    </select>
    <!---->
    <update id="updateData" parameterType="com.alibaba.fastjson.JSONObject">
        UPDATE service_engineering_wrong_parts
        SET
        wrongPartName=#{wrongPartName,jdbcType=VARCHAR},
        salesModel=#{salesModel,jdbcType=VARCHAR},
        designModel=#{designModel,jdbcType=VARCHAR},
        machineCode=#{machineCode,jdbcType=VARCHAR},
        agent=#{agent,jdbcType=VARCHAR},
        typeOfWrongPart=#{typeOfWrongPart,jdbcType=VARCHAR},
        isHistory=#{isHistory,jdbcType=VARCHAR},
        responsibleDepartmentId=#{responsibleDepartmentId,jdbcType=VARCHAR},
        principalUserId=#{principalUserId,jdbcType=VARCHAR},
        XGSSRespUserId=#{XGSSRespUserId,jdbcType=VARCHAR},
        problemDescription=#{problemDescription,jdbcType=VARCHAR},
        causeAnalysis=#{causeAnalysis,jdbcType=VARCHAR},
        involvedCar=#{involvedCar,jdbcType=VARCHAR},
        rectificationPlan=#{rectificationPlan,jdbcType=VARCHAR},
        newRectificationMeasures=#{newRectificationMeasures,jdbcType=VARCHAR},
        riskWarning=#{riskWarning,jdbcType=VARCHAR},
        XGSSRectificationPlan=#{XGSSRectificationPlan,jdbcType=VARCHAR},
        promiseTime=#{promiseTime,jdbcType=VARCHAR},
        actualTime=#{actualTime,jdbcType=VARCHAR},
        currentNodeBeginTime=#{currentNodeBeginTime,jdbcType=VARCHAR},
        businessStatus=#{businessStatus,jdbcType=VARCHAR},
        INST_ID_=#{INST_ID_,jdbcType=VARCHAR},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        WHERE
        id=#{id}
    </update>
    <!---->
    <select id="queryCjzgById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            service_engineering_wrong_parts.*,
            os_user.FULLNAME_,
            bpm_inst.INST_ID_  AS instId,
            bpm_inst.STATUS_   AS taskStatus,
            os_group.NAME_     AS respDepName,
            os_user1.FULLNAME_ AS principalUserName,
            os_user2.FULLNAME_ AS XGSSRespUserName
        FROM service_engineering_wrong_parts
            LEFT JOIN os_user ON service_engineering_wrong_parts.CREATE_BY_ = os_user.USER_ID_
            LEFT JOIN bpm_inst ON service_engineering_wrong_parts.id = bpm_inst.BUS_KEY_
            LEFT JOIN os_group ON service_engineering_wrong_parts.responsibleDepartmentId = os_group.GROUP_ID_
            LEFT JOIN os_user AS os_user1 ON service_engineering_wrong_parts.principalUserId = os_user1.USER_ID_
            LEFT JOIN os_user AS os_user2 ON service_engineering_wrong_parts.XGSSRespUserId = os_user2.USER_ID_
        WHERE service_engineering_wrong_parts.id = #{id}
    </select>
    <!---->
    <insert id="insertCjzg" parameterType="com.alibaba.fastjson.JSONObject">
        insert into service_engineering_wrong_parts(
          id,
          wrongPartName,
          salesModel,
          designModel,
          machineCode,
          agent,
          typeOfWrongPart,
          isHistory,
          responsibleDepartmentId,
          principalUserId,
          XGSSRespUserId,
          problemDescription,
          causeAnalysis,
          involvedCar,
          rectificationPlan,
          newRectificationMeasures,
          riskWarning,
          XGSSRectificationPlan,
          promiseTime,
          actualTime,
          currentNodeBeginTime,
          businessStatus,
          INST_ID_,
          CREATE_BY_,
          CREATE_TIME_
        )
        values
        (
          #{id,jdbcType=VARCHAR},
          #{wrongPartName,jdbcType=VARCHAR},
          #{salesModel,jdbcType=VARCHAR},
          #{designModel,jdbcType=VARCHAR},
          #{machineCode,jdbcType=VARCHAR},
          #{agent,jdbcType=VARCHAR},
          #{typeOfWrongPart,jdbcType=VARCHAR},
          #{isHistory,jdbcType=VARCHAR},
          #{responsibleDepartmentId,jdbcType=VARCHAR},
          #{principalUserId,jdbcType=VARCHAR},
          #{XGSSRespUserId,jdbcType=VARCHAR},
          #{problemDescription,jdbcType=VARCHAR},
          #{causeAnalysis,jdbcType=VARCHAR},
          #{involvedCar,jdbcType=VARCHAR},
          #{rectificationPlan,jdbcType=VARCHAR},
          #{newRectificationMeasures,jdbcType=VARCHAR},
          #{riskWarning,jdbcType=VARCHAR},
          #{XGSSRectificationPlan,jdbcType=VARCHAR},
          #{promiseTime,jdbcType=VARCHAR},
          #{actualTime,jdbcType=VARCHAR},
          #{currentNodeBeginTime,jdbcType=VARCHAR},
          #{businessStatus,jdbcType=VARCHAR},
          #{INST_ID_,jdbcType=VARCHAR},
          #{CREATE_BY_,jdbcType=VARCHAR},
          #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
</mapper>