<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.serviceEngineering.core.dao.DecorationManualIntegrityDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="currentIndex != null and currentIndex != '' ">
                limit ${currentIndex}, ${pageSize}
            </if>
            <if test="currentIndex == null or currentIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>
    <sql id="where">

        <if test="businessNo !=null and businessNo !=''">
            AND business.businessNo like CONCAT('%',#{businessNo},'%')
        </if>

        <if test="salesModel !=null and salesModel !=''">
            AND business.salesModel like CONCAT('%',#{salesModel},'%')
        </if>
        <if test="designModel !=null and designModel !=''">
            AND business.designModel like CONCAT('%',#{designModel},'%')
        </if>
        <if test="materialCode !=null and materialCode !=''">
            AND business.materialCode = #{materialCode}
        </if>

        <if test="applyUser !=null and applyUser !=''">
            AND business.applyUser like CONCAT('%',#{applyUser},'%')
        </if>
    </sql>

    <select id="dataListQuery" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        business.*
        FROM
        service_engineering_decoration_manualintegrity AS business
        <where>
            <include refid="where"/>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>


    <!---->
    <select id="countDataListQuery" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        service_engineering_decoration_manualintegrity AS business

        <where>
            <include refid="where"/>
        </where>
    </select>
    <!---->

    <!---->

    <!---->
    <delete id="deleteBusiness" parameterType="java.util.Map">
        delete from service_engineering_decoration_manualintegrity
        <where>
            <if test="businessIds != null and businessIds !=''">
                id IN
                <foreach collection="businessIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>
    <!--和组织，用户，bpm_inst的关联没啥用了。业务表冗余存储了，此处还保留，供以后其他的参考。特别注意，由于以前没有在业务表双向绑定INST_ID_才需要联查bpm_inst-->
    <select id="queryDetailById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT business.*
        FROM service_engineering_decoration_manualintegrity AS business
        WHERE business.id = #{businessId}

    </select>
    <!---->
    <insert id="insertBusiness" parameterType="com.alibaba.fastjson.JSONObject">
        insert into service_engineering_decoration_manualintegrity(
            id,
            businessNo,
            materialCode,
            salesModel,
            designModel,
            productLeaderName,
            productLeader,
            manualManName,
            manualMan,
            applyUserId,
            applyUser,
            applyDepId,
            applyDep,
            remark,
            totalNum,
            useNum,
            repairNum,
            CREATE_BY_,
            CREATE_TIME_
        )
        values(
            #{id,jdbcType=VARCHAR},
            #{businessNo,jdbcType=VARCHAR},
            #{materialCode,jdbcType=VARCHAR},
            #{salesModel,jdbcType=VARCHAR},
            #{designModel,jdbcType=VARCHAR},
            #{productLeaderName,jdbcType=VARCHAR},
            #{productLeader,jdbcType=VARCHAR},
            #{manualManName,jdbcType=VARCHAR},
            #{manualMan,jdbcType=VARCHAR},
            #{applyUserId,jdbcType=VARCHAR},
            #{applyUser,jdbcType=VARCHAR},
            #{applyDepId,jdbcType=VARCHAR},
            #{applyDep,jdbcType=VARCHAR},
            #{remark,jdbcType=VARCHAR},
            #{totalNum,jdbcType=INTEGER},
            #{useNum,jdbcType=INTEGER},
            #{repairNum,jdbcType=INTEGER},
            #{CREATE_BY_,jdbcType=VARCHAR},
            #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <update id="updateBusiness" parameterType="com.alibaba.fastjson.JSONObject">
        update service_engineering_decoration_manualintegrity
        set
            id=#{id,jdbcType=VARCHAR},
            businessNo=#{businessNo,jdbcType=VARCHAR},
            materialCode=#{materialCode,jdbcType=VARCHAR},
            salesModel=#{salesModel,jdbcType=VARCHAR},
            designModel=#{designModel,jdbcType=VARCHAR},
            productLeaderName=#{productLeaderName,jdbcType=VARCHAR},
            productLeader=#{productLeader,jdbcType=VARCHAR},
            manualManName=#{manualManName,jdbcType=VARCHAR},
            manualMan=#{manualMan,jdbcType=VARCHAR},
            applyUserId=#{applyUserId,jdbcType=VARCHAR},
            applyUser=#{applyUser,jdbcType=VARCHAR},
            applyDepId=#{applyDepId,jdbcType=VARCHAR},
            applyDep=#{applyDep,jdbcType=VARCHAR},
            remark=#{remark,jdbcType=VARCHAR},
            totalNum=#{totalNum,jdbcType=INTEGER},
            useNum=#{useNum,jdbcType=INTEGER},
            repairNum=#{repairNum,jdbcType=INTEGER},
            UPDATE_BY_=#{CREATE_BY_,jdbcType=VARCHAR},
            UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        where
            id=#{id}
    </update>

    <insert id="insertItem" parameterType="java.util.Map">
        insert into service_engineering_decoration_manualintegrityitems(
        id,
        mainId,
        materialName,
        materialCode,
        materialDesc,
        useDescBook,
        useTopicCode,
        useBpmStatus,
        repairBook,
        repairTopicCode,
        repairBpmStatus,
        CREATE_BY_,
        CREATE_TIME_
        )
        values
        (
        #{id,jdbcType=VARCHAR},
        #{mainId,jdbcType=VARCHAR},
        #{materialName,jdbcType=VARCHAR},
        #{materialCode,jdbcType=VARCHAR},
        #{materialDesc,jdbcType=VARCHAR},
        #{useDescBook,jdbcType=VARCHAR},
        #{useTopicCode,jdbcType=VARCHAR},
        #{useBpmStatus,jdbcType=VARCHAR},
        #{repairBook,jdbcType=VARCHAR},
        #{repairTopicCode,jdbcType=VARCHAR},
        #{repairBpmStatus,jdbcType=VARCHAR},
        #{CREATE_BY_,jdbcType=VARCHAR},
        #{CREATE_TIME_,jdbcType=TIMESTAMP}
        );

    </insert>

    <update id="updateItem" parameterType="java.util.Map">
        UPDATE service_engineering_decoration_manualintegrityitems
        SET
        materialName=#{materialName,jdbcType=VARCHAR},
        materialCode=#{materialCode,jdbcType=VARCHAR},
        materialDesc=#{materialDesc,jdbcType=VARCHAR},
        useDescBook=#{useDescBook,jdbcType=VARCHAR},
        useTopicCode=#{useTopicCode,jdbcType=VARCHAR},
        useBpmStatus=#{useBpmStatus,jdbcType=VARCHAR},
        repairBook=#{repairBook,jdbcType=VARCHAR},
        repairTopicCode=#{repairTopicCode,jdbcType=VARCHAR},
        repairBpmStatus=#{repairBpmStatus,jdbcType=VARCHAR},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        WHERE
        id=#{id};
    </update>

    <delete id="deleteItems" parameterType="java.util.Map">
        delete from service_engineering_decoration_manualintegrityitems
        <where>
            <if test="@Ognl@isNotEmpty(ids)">
                AND id IN
                <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="@Ognl@isNotEmpty(mainIds)">
                AND mainId IN
                <foreach collection="mainIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="@Ognl@isEmpty(ids) and @Ognl@isEmpty(mainIds)">
                AND 1=2
            </if>
        </where>
    </delete>

    <select id="getItemById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT business.*
        FROM service_engineering_decoration_manualintegrityitems AS business
        WHERE business.id = #{id}
    </select>
    <!---->
    <select id="getItemList" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        business.materialCode,
        business.id,
        business.mainId,
        warehouse.*
        FROM
        service_engineering_decoration_manualintegrityitems AS business
        LEFT JOIN service_engineering_decoration_manualintegritywarehouse AS warehouse ON business.materialCode =warehouse.materialCode
        <where>
            <if test="@Ognl@isNotEmpty(mainId)">
                AND business.mainId = #{mainId}
            </if>
            <if test="@Ognl@isNotEmpty(mainIds)">
                AND business.mainId IN
                <foreach collection="mainIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="@Ognl@isEmpty(mainId) and @Ognl@isEmpty(mainIds)">
                AND 1=2
            </if>
        </where>
    </select>

</mapper>