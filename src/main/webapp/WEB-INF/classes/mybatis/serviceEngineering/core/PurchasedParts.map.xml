<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.serviceEngineering.core.dao.PurchasedPartsDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="startIndex != null and startIndex != '' ">
                limit ${startIndex}, ${pageSize}
            </if>
            <if test="startIndex == null or startIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>

    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>
    <!---->
    <select id="dataListQuery" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT service_engineering_purchased_parts.*,
        os_group.NAME_ AS departmentName
        FROM
        service_engineering_purchased_parts
        LEFT JOIN os_group ON service_engineering_purchased_parts.departmentId = os_group.GROUP_ID_
        <where>
            <if test="dataType !=null and dataType !=''">
                AND service_engineering_purchased_parts.dataType = #{dataType}
            </if>
            <if test="materialCode !=null and materialCode !=''">
                AND service_engineering_purchased_parts.materialCode = #{materialCode}
            </if>
            <if test="materialDescription !=null and materialDescription !=''">
                AND service_engineering_purchased_parts.materialDescription like CONCAT('%',#{materialDescription},'%')
            </if>
            <if test="departmentId !=null and departmentId !=''">
                AND service_engineering_purchased_parts.departmentId = #{departmentId}
            </if>
            <if test="section !=null and section !=''">
                AND service_engineering_purchased_parts.section = #{section}
            </if>
            <if test="designModel !=null and designModel !=''">
                AND service_engineering_purchased_parts.designModel = #{designModel}
            </if>
            <if test="supplier !=null and supplier !=''">
                AND service_engineering_purchased_parts.supplier = #{supplier}
            </if>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>
    <!---->
    <select id="countDataListQuery" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        service_engineering_purchased_parts
        <where>
            <if test="dataType !=null and dataType !=''">
                AND service_engineering_purchased_parts.dataType = #{dataType}
            </if>
            <if test="materialCode !=null and materialCode !=''">
                AND service_engineering_purchased_parts.materialCode = #{materialCode}
            </if>
            <if test="materialDescription !=null and materialDescription !=''">
                AND service_engineering_purchased_parts.materialDescription like CONCAT('%',#{materialDescription},'%')
            </if>
            <if test="departmentId !=null and departmentId !=''">
                AND service_engineering_purchased_parts.departmentId = #{departmentId}
            </if>
            <if test="section !=null and section !=''">
                AND service_engineering_purchased_parts.section = #{section}
            </if>
            <if test="designModel !=null and designModel !=''">
                AND service_engineering_purchased_parts.designModel = #{designModel}
            </if>
            <if test="supplier !=null and supplier !=''">
                AND service_engineering_purchased_parts.supplier = #{supplier}
            </if>
        </where>
    </select>
    <!---->
    <insert id="insertData" parameterType="com.alibaba.fastjson.JSONObject">
        insert into service_engineering_purchased_parts(
          id,
          dataType,
          materialCode,
          materialDescription,
          departmentId,
          section,
          designModel,
          supplier,
          contact,
          contactInformation,
          productOwner,
          collectionInformationSubmissionDate,
          serviceEngineeringOwner,
          firstLevelDeadline,
          firstLevelProvided,
          secondLevelDeadline,
          secondLevelProvided,
          isFiled,
          thirdLevelProvided,
          isMade,
          isNeedInform,
          remark,
          CREATE_BY_,
          CREATE_TIME_
        )
        values
        (
          #{id,jdbcType=VARCHAR},
          #{dataType,jdbcType=VARCHAR},
          #{materialCode,jdbcType=VARCHAR},
          #{materialDescription,jdbcType=VARCHAR},
          #{departmentId,jdbcType=VARCHAR},
          #{section,jdbcType=VARCHAR},
          #{designModel,jdbcType=VARCHAR},
          #{supplier,jdbcType=VARCHAR},
          #{contact,jdbcType=VARCHAR},
          #{contactInformation,jdbcType=VARCHAR},
          #{productOwner,jdbcType=VARCHAR},
          #{collectionInformationSubmissionDate,jdbcType=VARCHAR},
          #{serviceEngineeringOwner,jdbcType=VARCHAR},
          #{firstLevelDeadline,jdbcType=VARCHAR},
          #{firstLevelProvided,jdbcType=VARCHAR},
          #{secondLevelDeadline,jdbcType=VARCHAR},
          #{secondLevelProvided,jdbcType=VARCHAR},
          #{isFiled,jdbcType=VARCHAR},
          #{thirdLevelProvided,jdbcType=VARCHAR},
          #{isMade,jdbcType=VARCHAR},
          #{isNeedInform,jdbcType=VARCHAR},
          #{remark,jdbcType=VARCHAR},
          #{CREATE_BY_,jdbcType=VARCHAR},
          #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <update id="updateData" parameterType="com.alibaba.fastjson.JSONObject">
        update service_engineering_purchased_parts
        set
        dataType=#{dataType,jdbcType=VARCHAR},
        materialCode=#{materialCode,jdbcType=VARCHAR},
        materialDescription=#{materialDescription,jdbcType=VARCHAR},
        departmentId=#{departmentId,jdbcType=VARCHAR},
        section=#{section,jdbcType=VARCHAR},
        designModel=#{designModel,jdbcType=VARCHAR},
        supplier=#{supplier,jdbcType=VARCHAR},
        contact=#{contact,jdbcType=VARCHAR},
        contactInformation=#{contactInformation,jdbcType=VARCHAR},
        productOwner=#{productOwner,jdbcType=VARCHAR},
        collectionInformationSubmissionDate=#{collectionInformationSubmissionDate,jdbcType=VARCHAR},
        serviceEngineeringOwner=#{serviceEngineeringOwner,jdbcType=VARCHAR},
        firstLevelDeadline=#{firstLevelDeadline,jdbcType=VARCHAR},
        firstLevelProvided=#{firstLevelProvided,jdbcType=VARCHAR},
        secondLevelDeadline=#{secondLevelDeadline,jdbcType=VARCHAR},
        secondLevelProvided=#{secondLevelProvided,jdbcType=VARCHAR},
        isFiled=#{isFiled,jdbcType=VARCHAR},
        thirdLevelProvided=#{thirdLevelProvided,jdbcType=VARCHAR},
        isMade=#{isMade,jdbcType=VARCHAR},
        isNeedInform=#{isNeedInform,jdbcType=VARCHAR},
        remark=#{remark,jdbcType=VARCHAR},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        where
        id=#{id}
    </update>
    <!---->
    <delete id="deleteData" parameterType="java.util.Map">
        delete from service_engineering_purchased_parts
        where id in
        <foreach collection="businessIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!---->
    <select id="queryDataById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            service_engineering_purchased_parts.*,
            os_group.NAME_ AS departmentName
        FROM
            service_engineering_purchased_parts
            LEFT JOIN os_group ON service_engineering_purchased_parts.departmentId = os_group.GROUP_ID_
        WHERE
            service_engineering_purchased_parts.id = #{businessId}
    </select>
    <!---->
    <select id="weeklyReportListQuery" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT * FROM
        service_engineering_purchased_parts_weekly_report
        <where>
            <if test="signYear !=null and signYear !=''">
                AND service_engineering_purchased_parts_weekly_report.signYear = #{signYear}
            </if>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>
    <!---->
    <select id="countWeeklyReportListQuery" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        service_engineering_purchased_parts_weekly_report
        <where>
            <if test="signYear !=null and signYear !=''">
                AND service_engineering_purchased_parts_weekly_report.signYear = #{signYear}
            </if>
        </where>
    </select>
    <!---->
    <select id="queryWeeklyReportById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT *
        FROM
            service_engineering_purchased_parts_weekly_report
        WHERE
            service_engineering_purchased_parts_weekly_report.id = #{id}
    </select>
    <!---->
    <delete id="deleteWeeklyReportById" parameterType="java.lang.String">
        delete from service_engineering_purchased_parts_weekly_report
        where id = #{id}
    </delete>
    <!---->
    <insert id="insertWeeklyReport" parameterType="java.util.Map">
        insert into service_engineering_purchased_parts_weekly_report(
        id,
        signYear,
        signMonth,
        description,
        releaseTime,
        CREATE_BY_,
        CREATE_TIME_
        )
        values
        (
        #{id,jdbcType=VARCHAR},
        #{signYear,jdbcType=VARCHAR},
        #{signMonth,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR},
        #{releaseTime,jdbcType=VARCHAR},
        #{CREATE_BY_,jdbcType=VARCHAR},
        #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <update id="updateWeeklyReport" parameterType="java.util.Map">
        update service_engineering_purchased_parts_weekly_report
        set
        signYear=#{signYear,jdbcType=VARCHAR},
        signMonth=#{signMonth,jdbcType=VARCHAR},
        description=#{description,jdbcType=VARCHAR},
        releaseTime=#{releaseTime,jdbcType=VARCHAR},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        where
        id=#{id}
    </update>
</mapper>