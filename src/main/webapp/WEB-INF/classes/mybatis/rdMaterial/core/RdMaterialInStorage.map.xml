<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.rdMaterial.core.dao.RdMaterialInStorageDao">
    <sql id="pageSql">
        <if test="pageSize != null and pageSize != '' ">
            <if test="currentIndex != null and currentIndex != '' ">
                limit ${currentIndex}, ${pageSize}
            </if>
            <if test="currentIndex == null or currentIndex == '' ">
                limit ${pageSize}
            </if>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="sortField != null and sortField != '' ">
            <if test="sortOrder != null and sortOrder !='' ">
                order by ${sortField} ${sortOrder}
            </if>
            <if test="sortOrder == null or sortOrder =='' ">
                order by ${sortField} asc
            </if>
        </if>
    </sql>
    <sql id="queryWhereDataListQuery">
        <if test="@Ognl@isNotEmpty(businessNo)">
            AND business.businessNo = #{businessNo}
        </if>
        <if test="@Ognl@isNotEmpty(responsibleUser)">
            AND business.responsibleUser like CONCAT('%',#{responsibleUser},'%')
        </if>
        <if test="@Ognl@isNotEmpty(responsibleDep)">
            AND business.responsibleDep like CONCAT('%',#{responsibleDep},'%')
        </if>
        <if test="@Ognl@isNotEmpty(inDateBegin)">
            AND business.inDate &gt;= #{inDateBegin}
        </if>
        <if test="@Ognl@isNotEmpty(inDateEnd)">
            AND business.inDate &lt;= #{inDateEnd}
        </if>
    </sql>
    <sql id="queryWhereItemListQuery">
        <if test="@Ognl@isNotEmpty(businessNo)">
            AND main.businessNo = #{businessNo}
        </if>
        <if test="@Ognl@isNotEmpty(materialCode)">
            AND business.materialCode like CONCAT('%',#{materialCode},'%')
        </if>
        <if test="@Ognl@isNotEmpty(materialDescription)">
            AND business.materialDescription like CONCAT('%',#{materialDescription},'%')
        </if>
        <if test="@Ognl@isNotEmpty(responsibleUser)">
            AND main.responsibleUser like CONCAT('%',#{responsibleUser},'%')
        </if>
        <if test="@Ognl@isNotEmpty(responsibleDep)">
            AND main.responsibleDep like CONCAT('%',#{responsibleDep},'%')
        </if>
        <if test="@Ognl@isNotEmpty(inDateBegin)">
            AND main.inDate &gt;= #{inDateBegin}
        </if>
        <if test="@Ognl@isNotEmpty(inDateEnd)">
            AND main.inDate &lt;= #{inDateEnd}
        </if>
        <if test="@Ognl@isNotEmpty(businessStatus)">
            AND main.businessStatus = #{businessStatus}
        </if>
    </sql>
    <!---->
    <select id="dataListQuery" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        business.*
        FROM
        rd_material_instorage as business
        <where>
            <include refid="queryWhereDataListQuery"/>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>
    <!---->
    <select id="countDataListQuery" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        rd_material_instorage as business
        <where>
            <include refid="queryWhereDataListQuery"/>
        </where>
    </select>
    <!---->
    <select id="getDataById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT business.*
        FROM rd_material_instorage AS business
        WHERE business.id = #{id}
    </select>
    <!---->
    <delete id="deleteBusiness" parameterType="java.util.Map">
        delete from rd_material_instorage
        <where>
            <if test="@Ognl@isNotEmpty(ids)">
                AND id IN
                <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="@Ognl@isEmpty(ids)">
                AND 1=2
            </if>
        </where>
    </delete>
    <!---->
    <insert id="insertBusiness" parameterType="java.util.Map">
        insert into rd_material_instorage(
        id,
        businessNo,
        reasonForStorage,
        responsibleUserId,
        responsibleUser,
        responsibleDepId,
        responsibleDep,
        inDate,
        remarks,
        businessStatus,
        CREATE_BY_,
        CREATE_TIME_
        )
        values
        (
        #{id,jdbcType=VARCHAR},
        #{businessNo,jdbcType=VARCHAR},
        #{reasonForStorage,jdbcType=VARCHAR},
        #{responsibleUserId,jdbcType=VARCHAR},
        #{responsibleUser,jdbcType=VARCHAR},
        #{responsibleDepId,jdbcType=VARCHAR},
        #{responsibleDep,jdbcType=VARCHAR},
        #{inDate,jdbcType=VARCHAR},
        #{remarks,jdbcType=VARCHAR},
        #{businessStatus,jdbcType=VARCHAR},
        #{CREATE_BY_,jdbcType=VARCHAR},
        #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <update id="updateBusiness" parameterType="java.util.Map">
        UPDATE rd_material_instorage
        SET
        businessNo=#{businessNo,jdbcType=VARCHAR},
        reasonForStorage=#{reasonForStorage,jdbcType=VARCHAR},
        responsibleUserId=#{responsibleUserId,jdbcType=VARCHAR},
        responsibleUser=#{responsibleUser,jdbcType=VARCHAR},
        responsibleDepId=#{responsibleDepId,jdbcType=VARCHAR},
        responsibleDep=#{responsibleDep,jdbcType=VARCHAR},
        inDate=#{inDate,jdbcType=VARCHAR},
        remarks=#{remarks,jdbcType=VARCHAR},
        businessStatus=#{businessStatus,jdbcType=VARCHAR},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        WHERE
        id=#{id}
    </update>
    <!---->
    <select id="getItemList" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        business.*
        FROM
        rd_material_instorage_items AS business
        <where>
            <if test="@Ognl@isNotEmpty(mainId)">
                AND business.mainId = #{mainId}
            </if>
            <if test="@Ognl@isNotEmpty(materialCode)">
                AND business.materialCode like CONCAT('%',#{materialCode},'%')
            </if>
            <if test="@Ognl@isNotEmpty(mainIds)">
                AND business.mainId IN
                <foreach collection="mainIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="@Ognl@isEmpty(mainId) and @Ognl@isEmpty(mainIds)">
                AND 1=2
            </if>
        </where>
    </select>
    <!---->
    <select id="itemListQuery" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        business.*,
        main.businessNo,
        main.responsibleDep,
        main.responsibleUser,
        main.inDate,
        main.reasonForStorage
        FROM
        rd_material_instorage_items as business
        INNER JOIN rd_material_instorage AS main
        ON business.mainId = main.id
        <where>
            <include refid="queryWhereItemListQuery"/>
        </where>
        <include refid="orderBy"/>
        <include refid="pageSql"/>
    </select>
    <!---->
    <select id="countItemListQuery" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        rd_material_instorage_items as business
        INNER JOIN rd_material_instorage AS main
        ON business.mainId = main.id
        <where>
            <include refid="queryWhereItemListQuery"/>
        </where>
    </select>
    <!---->
    <insert id="insertItem" parameterType="java.util.Map">
        insert into rd_material_instorage_items(
        id,
        mainId,
        materialCode,
        materialType,
        materialDescription,
        inQuantity,
        untreatedQuantity,
        CREATE_BY_,
        CREATE_TIME_
        )
        values
        (
        #{id,jdbcType=VARCHAR},
        #{mainId,jdbcType=VARCHAR},
        #{materialCode,jdbcType=VARCHAR},
        #{materialType,jdbcType=VARCHAR},
        #{materialDescription,jdbcType=VARCHAR},
        #{inQuantity,jdbcType=VARCHAR},
        #{untreatedQuantity,jdbcType=VARCHAR},
        #{CREATE_BY_,jdbcType=VARCHAR},
        #{CREATE_TIME_,jdbcType=TIMESTAMP}
        )
    </insert>
    <!---->
    <update id="updateItem" parameterType="java.util.Map">
        UPDATE rd_material_instorage_items
        SET
        materialCode=#{materialCode,jdbcType=VARCHAR},
        materialType=#{materialType,jdbcType=VARCHAR},
        materialDescription=#{materialDescription,jdbcType=VARCHAR},
        inQuantity=#{inQuantity,jdbcType=VARCHAR},
        untreatedQuantity=#{untreatedQuantity,jdbcType=VARCHAR},
        UPDATE_BY_=#{UPDATE_BY_,jdbcType=VARCHAR},
        UPDATE_TIME_=#{UPDATE_TIME_,jdbcType=TIMESTAMP}
        WHERE
        id=#{id}
    </update>
    <!---->
    <delete id="deleteItems" parameterType="java.util.Map">
        delete from rd_material_instorage_items
        <where>
            <if test="@Ognl@isNotEmpty(ids)">
                AND id IN
                <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="@Ognl@isNotEmpty(mainIds)">
                AND mainId IN
                <foreach collection="mainIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="@Ognl@isEmpty(ids) and @Ognl@isEmpty(mainIds)">
                AND 1=2
            </if>
        </where>
    </delete>
    <!---->
    <select id="getItemById" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT business.*
        FROM rd_material_instorage_items AS business
        WHERE business.id = #{id}
    </select>
</mapper>